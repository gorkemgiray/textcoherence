<?xml version="1.0"?>
<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns="http://www.owl-ontologies.com/unnamed.owl#"
  xml:base="http://www.owl-ontologies.com/unnamed.owl">
  <owl:Ontology rdf:about=""/>
  <owl:Class rdf:ID="_TernarySlot">
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:TernarySlot</rdfs:label>
    <rdfs:subClassOf>
      <owl:Class rdf:ID="_SKIF-SLOT"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="#_SKIF-SLOT">
    <rdfs:subClassOf rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:allValuesFrom>
          <_SYN-CLASS rdf:ID="Entity">
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >TopLevel05 - starter ontology for he COSMO Working group
   Last modification Jan. 22, 2006
      Top node of the non-structural ontology is "Entity"  -- all instances of any type are an instance of this type.     
</rdfs:comment>
            <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >Entity</rdfs:label>
            <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
            >0</_LOAD-SEQUENCE>
          </_SYN-CLASS>
        </owl:allValuesFrom>
        <owl:onProperty>
          <owl:ObjectProperty rdf:ID="_isaSubrelationOf"/>
        </owl:onProperty>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:SKIF-SLOT</rdfs:label>
  </owl:Class>
  <owl:Class rdf:ID="_KIF-CLASS">
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:KIF-CLASS</rdfs:label>
    <rdfs:subClassOf rdf:resource="http://www.w3.org/2002/07/owl#Class"/>
  </owl:Class>
  <owl:Class rdf:ID="_VariableAritySlot">
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:VariableAritySlot</rdfs:label>
    <rdfs:subClassOf rdf:resource="#_SKIF-SLOT"/>
  </owl:Class>
  <owl:ObjectProperty rdf:ID="_hasValueClass">
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <_AXIOMS rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >(KAX-007)
(=>
  (:hasValueClass  ?VAL ?REL ?CLASS)
  (and
     (instance ?REL BinaryPredicate)
     (forall (?INST)
        (=>
          (instance ?INST ?CLASS)
          (?REL ?INST ?VAL)))))</_AXIOMS>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasValueClass is an inverse of :hasClassValue. It specifies that a certain value always holds in a certain relation on a particular class, but the relation has a different polarity from the relations similarly restricted with :hasClassValue.
   This can be used to relate a particular value on a relation to those classes whose instances always have that value.</rdfs:comment>
    <_Domain2Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain2Type>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_SYN-CLASS rdf:about="#Entity"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasValueClass</rdfs:label>
    <_Domain2Class>
      <_SYN-CLASS rdf:ID="BinaryRelation">
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="Relation">
            <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
            >0</_LOAD-SEQUENCE>
            <rdfs:subClassOf>
              <_SYN-CLASS rdf:ID="Abstract_object_ISO15926">
                <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                >The most general Type whose subtypes are abstract - intangible - things

Intangible_Cyc__Abstract_SUMO__abstract_object_ISO15926

ISO15926 An Abstract-object is a thing that does not exist in space-time.

SUMO: Abstract : Properties or qualities as distinguished from any particular embodiment of the properties/qualities in a physical medium. Instances of Abstract can be said to exist in the same sense as mathematical objects such as sets and relations, but they cannot exist at a particular place and time without some physical encoding or embodiment.

#$Intangible:  OPENCYC 1: MAY 23, 2002
The collection of things that are not physical -- are not made of, or encoded in, matter. Every #$Collection is an #$Intangible (even if its instances are tangible), and so are some #$Individuals. Caution: do not confuse `tangibility&amp;apos; with `perceivability&amp;apos; -- humans can perceive light even though it&amp;apos;s intangible--at least in a sense. For more on this issue, see the relevant #$cyclistNotes.</rdfs:comment>
                <rdfs:subClassOf rdf:resource="#Entity"/>
                <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                >Intangible[Cyc]%Abstract[SUMO]%abstract_object[ISO15926]</rdfs:label>
                <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
                >82</_LOAD-SEQUENCE>
              </_SYN-CLASS>
            </rdfs:subClassOf>
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >   &amp;&amp;SUMO: The &amp;%Class of relations.  There are three kinds 
of &amp;%Relation:  &amp;%Predicate, &amp;%Function, and &amp;%List.  &amp;%Predicates and 
&amp;%Functions both denote sets of ordered n-tuples.  The difference between 
these two &amp;%Classes is that &amp;%Predicates cover formula-forming operators, while &amp;%Functions cover term-forming operators.  A &amp;%List, on the other hand, is a particular ordered n-tuple.

NOTE: in OpenCyc, Relation is a MathematicalObject, but it does not inherit any important properties from that class, so it is placed in COSMO directly under "Abstract".
OPENCYC 1: MAY 23, 2002
The collection of relations whose CycL representations can appear in the 0th (or arg0 ) argument position of a #$CycLFormula, i.e. as the term immediately following the formula&amp;apos;s opening parenthesis. An important subcollection of #$Relation is #$TruthFunction (q.v.), whose instances are intimately related to truth-values, as reflected in the fact that the CycL expressions that denote truth-functions can appear in the arg0 position of a #$CycLSentence; and a sentence (if quantificationally closed; see #$CycLClosedSentence), will generally be either true or false (with respect to a given context or interpretation). The major subcollections of #$TruthFunction are #$Predicate, #$LogicalConnective, and #$Quantifier (qq.v.). Another important subcollection of #$Relation is #$Function-Denotational (q.v.), whose instances are functions the CycL expressions for which can appear in the arg0 position of a #$CycLNonAtomicTerm; and such terms (if closed) generally denote things.</rdfs:comment>
            <rdfs:subClassOf>
              <_SYN-CLASS rdf:ID="MathematicalThing">
                <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
                >88</_LOAD-SEQUENCE>
                <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                >OPENCYC 1: MAY 23, 2002
A specialization of #$MathematicalOrComputationalThing. Each instance of #$MathematicalThing is an atemporal, nonspatial, purely mathematical thing. #$MathematicalThing is partitioned into two main specializations, #$MathematicalObject and #$SetOrCollection (qq.v).
</rdfs:comment> <rdfs:subClassOf rdf:resource="#Abstract_object_ISO15926"/>
              </_SYN-CLASS>
            </rdfs:subClassOf>
          </_SYN-CLASS>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >A BinaryRelation is a class of relations with two arguments, specifying a relation between those two arguments.</rdfs:comment>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >0</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </_Domain2Class>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasValueClass</_SUO-name>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#_isaSubrelationOf">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:isaSubrelationOf  points from a slot to the parent relation, if any.</rdfs:comment>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:isaSubrelationOf</_SUO-name>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <owl:Class rdf:about="#_SKIF-SLOT"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:isaSubrelationOf</rdfs:label>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="isaPhysicalPartOf">
    <rdfs:domain>
      <_SYN-CLASS rdf:ID="PartiallyTangible_Cyc__Object_SUMO__physical-endurant_DOLCE_">
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="SomethingExisting">
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >OPENCYC 1: MAY 23, 2002
A specialization of #$TemporalThing whose instances are more or less static, as compared (e.g.) to the more dynamic instances of #$Event. The clearest examples of #$SomethingExistings are tangible things, such as people, lakes, stars, and the Earth&amp;apos;s ionosphere. But #$SomethingExisting also includes certain intangible temporal things, such as #$Agreements and #$Obligations, that remain relatively stable throughout their lifetimes. On the other hand, #$SomethingExisting excludes purely temporal intangibles such as #$TimeIntervals.
</rdfs:comment>
            <rdfs:subClassOf>
              <_SYN-CLASS rdf:ID="TemporalThing">
                <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
                >43</_LOAD-SEQUENCE>
                <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                >In Opencyc a 'TemporalThing' is very generic, it is anything that has a beginning poinit in time (and presumably an ending point, though it may not be known for existing things).  Thus physical objects, which must come into existence at some time (perhaps the beginning of time), as wel as events, are 'TemporalThings'.

OPENCYC 1: MAY 23, 2002
The collection of all things that have temporal extent or location, i.e. things about which one might sensibly ask When? . #$TemporalThing thus contains many kinds of things, including events, physical objects, agreements, and abstract pieces of time. Note that #$TimePoint is a specialization of #$TemporalThing, since time points have temporal location, although they arguably lack temporal extent. Abstract things that are timeless -- such as mathematical sets, attributes, and numbers -- are of course _not_ instances of #$TemporalThing.</rdfs:comment>
                <rdfs:subClassOf>
                  <_SYN-CLASS rdf:ID="Individual">
                    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                    >A Cyc concept to distinguish abstract sets and collections (classes) from things that are individuals.  Interestingly, groups of things can be individuals - if they are defined as distinct from sets (see 'Group' under TemporalThing).   This class may be superfluous, bu it may be useful to keep the top level from getting too crowded.

From OpenCyc:  OPENCYC 1: MAY 23, 2002
#$Individual is the collection of all individuals: things that are _not_ sets or collections. Individuals might be concrete or abstract, and include (among other things) physical objects, events, numbers, relations, and groups. An instance of #$Individual might have parts or structure (including discontinuous parts); but _no_ individual has elements or subsets (see #$elementOf and #$subsetOf). Thus, an individual that has parts (e.g. #$physicalParts or #$groupMembers) is _not_ the same thing as either the set or the collection containing those same parts. For example, your car is an individual, but the collection of all the parts of your car is not an individual but an instance of #$Collection. This collection (unlike the car itself) is abstract: it doesn&amp;apos;t have a location, mass, or a top speed; but it does have instances, subcollections, and supercollections. In partial contrast, the #$Group (q.v.) of parts of your car (while also not the same thing as the car itself) _is_ an individual that has location and mass. Another example: A given company, the group consisting of all the company's employees, the collection of those employees, and the set of those employees are four distinct things, and only the first two are individuals.</rdfs:comment>
                    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
                    >2</_LOAD-SEQUENCE>
                    <rdfs:subClassOf rdf:resource="#Entity"/>
                  </_SYN-CLASS>
                </rdfs:subClassOf>
              </_SYN-CLASS>
            </rdfs:subClassOf>
            <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
            >56</_LOAD-SEQUENCE>
          </_SYN-CLASS>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="SpatialThing-Localized">
            <rdfs:subClassOf>
              <_SYN-CLASS rdf:ID="spatio-temporal-particular">
                <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
                >3</_LOAD-SEQUENCE>
                <rdfs:subClassOf>
                  <_SYN-CLASS rdf:ID="SpatialThing">
                    <rdfs:subClassOf rdf:resource="#Individual"/>
                    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                    >NOTE that OpenCyc spatialThing does not necessarily have to be in our Space-Time; it can be in an abstract space.  So this is not identical to DOLCE 'spatio-temporal-particular', which is a subclass.

OPENCYC 1: MAY 23, 2002
The collection of all things that have a spatial extent or location relative to some other #$SpatialThing or in some embedding space. Note that to say that an entity is a member of this collection is to remain agnostic about two issues. First, a #$SpatialThing may be #$PartiallyTangible (e.g. #$Texas-State) or wholly #$Intangible (e.g. #$ArcticCircle or a line mentioned in a geometric theorem). Second, although we do insist on location relative to another spatial thing or in some embedding space, a #$SpatialThing might or might not be located in the actual physical universe. It is far from clear that all #$SpatialThings are so located: an ideal platonic circle or a trajectory through the phase space of some physical system (e.g.) might not be. If the intent is to imply location in the empirically observable cosmos, the user should employ this collection&amp;apos;s specialization, #$SpatialThing-Localized.</rdfs:comment>
                  </_SYN-CLASS>
                </rdfs:subClassOf>
                <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                >COSMO Note: note that Cyc SpatialThing does not have to be in our space-time, whereas DOLCE spatio-temporal-particular is.  So the DOLCE class is a subclass of the Cyc class.

OPENCYC 1: MAY 23, 2002
The collection of all things that have a spatial extent or location relative to some other #$SpatialThing or in some embedding space. Note that to say that an entity is a member of this collection is to remain agnostic about two issues. First, a #$SpatialThing may be #$PartiallyTangible (e.g. #$Texas-State) or wholly #$Intangible (e.g. #$ArcticCircle or a line mentioned in a geometric theorem). Second, although we do insist on location relative to another spatial thing or in some embedding space, a #$SpatialThing might or might not be located in the actual physical universe. It is far from clear that all #$SpatialThings are so located: an ideal platonic circle or a trajectory through the phase space of some physical system (e.g.) might not be. If the intent is to imply location in the empirically observable cosmos, the user should employ this collection&amp;apos;s specialization, #$SpatialThing-Localized.
Note that most of the Cyc 'SpatialThings' are in our universe (though not necessarily) , so most are also under DOLCE 'spatio-temporal-particular'.

DOLCE: Dummy class for optimizing some property universes. It includes all entities that are not reifications of universals ('abstracts'), i.e. those entities that are in space-time.</rdfs:comment>
                <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                >spatio-temporal-particular[DOLCE]%SpatialThing</rdfs:label>
              </_SYN-CLASS>
            </rdfs:subClassOf>
            <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
            >4</_LOAD-SEQUENCE>
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >OPENCYC 1: MAY 23, 2002
The collection of all spatial things, tangible or intangible, that can be meaningfully said to have location or position in the empirically observable universe of the context in question. This includes all #$PartiallyTangible things, such as pyramids and ships, as well as certain #$Intangible spatial things, like the #$Equator. Also included are all #$Events that can be pinned down to specific places (see #$Event-Localized), and thus all #$PhysicalEvents. But note that many events are non-examples, such as the event of a certain law coming into effect and (presumably) purely mental events as well, at least in most contexts. Also excluded are #$SpatialThings that are _not_ localized, such as purely abstract geometrical figures (e.g. a Platonic sphere). All instances of #$SpatialThing-Localized are temporal things, and thus have finite lifespans (the upper bound of which is the lifespan of the universe itself). Finally, note that imaginary entities like Frodo, Captain Queeg, and #$HAL9000-TheComputer may be localized within the (imaginary) universes attaching to the fictitious contexts in which they are defined, and so would be instances of #$SpatialThing-Localized within those microtheoretic contexts.</rdfs:comment>
          </_SYN-CLASS>
        </rdfs:subClassOf>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >PartiallyTangible[Cyc]%Object[SUMO]%physical-endurant[DOLCE]</rdfs:label>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >COSMO: Cyc #$PartiallyTangible is at the intersection of TemporalThing (direct parent is SomethingExisting) and SpatialThing (direct parent is SpatialThing-Localized).  It subsumes all (3-D) Physical Objects such as peoplw</rdfs:comment>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >15</_LOAD-SEQUENCE>
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="TwoOrHigherDimensionalThing">
            <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >TwoOrHigherDimensionalThing[Cyc]</rdfs:label>
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >OPENCYC 1: MAY 23, 2002
A specialization of #$SpatialThing each instance of which is either a two- or three- (or higher-) dimensional spatial object. Examples include tangible or intangible spatially-localized polydimensional objects, such as the flat surface of a tabletop and the table itself, as well as abstract geometrical objects that are at least two-dimensional, such as a Platonic cube.
</rdfs:comment>
            <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
            >11</_LOAD-SEQUENCE>
            <rdfs:subClassOf rdf:resource="#SpatialThing"/>
          </_SYN-CLASS>
        </rdfs:subClassOf>
      </_SYN-CLASS>
    </rdfs:domain>
    <rdfs:range rdf:resource="#PartiallyTangible_Cyc__Object_SUMO__physical-endurant_DOLCE_"/>
    <rdfs:subPropertyOf>
      <owl:ObjectProperty rdf:ID="isLocatedAt"/>
    </rdfs:subPropertyOf>
    <rdfs:subPropertyOf>
      <owl:ObjectProperty rdf:ID="isaPartOf"/>
    </rdfs:subPropertyOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >isaPhysicalPartOf relates physical objects to the larger objects of which they may be parts.  This is time-dependent and applies only to instances at a particular time.  It is transitive.</rdfs:comment>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#TransitiveProperty"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="relatedExternalConcept">
    <_Domain2Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain2Type>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_KIF-CLASS rdf:ID="_SYN-CLASS">
            <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >:SYN-CLASS</rdfs:label>
            <rdfs:subClassOf rdf:resource="http://www.w3.org/2002/07/owl#Class"/>
          </_KIF-CLASS>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >relatedExternalConcept</_SUO-name>
    <_Domain2Class rdf:resource="#Entity"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_isaSynonymOf">
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_KIF-CLASS rdf:about="#_SYN-CLASS"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:isaSynonymOf</_SUO-name>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The reverse pointer from an instance of :Synonym to the concept of which it is a synonym.</rdfs:comment>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:isaSynonymOf</rdfs:label>
    <owl:inverseOf rdf:resource="#_isaSynonymOf"/>
    <_AXIOMS rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >(KAX-006)
(=>
   (:isaSynonymOf ?SYN ?CONC)
   (:SYNONYMS ?CONC ?SYN))</_AXIOMS>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_isInModule">
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <owl:Class rdf:about="#_KIF-CLASS"/>
          <_KIF-CLASS rdf:about="#_SYN-CLASS"/>
          <_SYN-CLASS rdf:about="#Entity"/>
          <owl:Class rdf:about="#_SKIF-SLOT"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:IsInModule is a slot that attaches to both :UBL-SLOT and :UBL-CLASS.
It is used to organize the concepts in related groupings.  Initially, the modules specified will be those of the SUMO ontology.
   we allow a concpet to be inmore than one module, but in order to reproduce the structure of a particular KIF file, only one module should be specified.</rdfs:comment>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:isInModule</rdfs:label>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="relatedInternalConcept">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SUMO - 155</rdfs:comment>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >relatedInternalConcept</_SUO-name>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_KIF-CLASS rdf:about="#_SYN-CLASS"/>
          <_SYN-CLASS rdf:about="#Entity"/>
          <owl:Class rdf:about="#_SKIF-SLOT"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="disjointDecomposition">
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <_AXIOMS rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >(UAX: SUMAX-38)
(=>
   (disjointDecomposition @ROW)
   (=>
      (inList ?ELEMENT (ListFn @ROW))
      (instance ?ELEMENT Class)))

(UAX: SUMAX-119)
(=>
   (disjointDecomposition ?CLASS @ROW)
   (forall (?ITEM)
      (=>
         (inList ?ITEM (ListFn @ROW))
         (subclass ?ITEM ?CLASS))))

(UAX: SUMAX-120)
(=>
   (disjointDecomposition ?CLASS @ROW)
   (forall (?ITEM1 ?ITEM2)
      (=>
         (and
            (inList ?ITEM1 (ListFn @ROW))
            (inList ?ITEM2 (ListFn @ROW))
            (not
               (equal ?ITEM1 ?ITEM2)))
         (disjoint ?ITEM1 ?ITEM2))))</_AXIOMS>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A &amp;%disjointDecomposition of a &amp;%Class C is a set of subclasses of C that are mutually &amp;%disjoint.</rdfs:comment>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_KIF-CLASS rdf:about="#_SYN-CLASS"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_hasClassValue">
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Class</_Domain1Type>
    <_Domain2Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain2Type>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >"(:hasClassValue ?REL ?CLASS ?VAL) is used to specify that every instance ?INST of class ?CLASS will have the same instance ?VAL related to ?INST by the relation ?REL.  This explicit assignment of a value can override a default assignment using the relation :hasDefaultValue.  Note that attempting to assign a value to one class and a different value to a subclass will result in a logical contradiction.  The parent class value must be set by :hasDefaultValue in order for hasClassValue to overide the default without contradiction."</rdfs:comment>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasClassValue</_SUO-name>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasClassValue</rdfs:label>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_KIF-CLASS rdf:about="#_SYN-CLASS"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <_Domain2Class rdf:resource="#BinaryRelation"/>
    <_AXIOMS rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >(KAX-002)
(=>
  (:hasClassValue ?CLASS ?REL ?VAL)
  (and
     (instance ?REL BinaryPredicate)
     (forall (?INST)
        (=>
          (instance ?INST ?CLASS)
          (?REL ?INST ?VAL)))))
</_AXIOMS>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#isLocatedAt">
    <rdfs:domain rdf:resource="#SpatialThing-Localized"/>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#TransitiveProperty"/>
    <rdfs:range rdf:resource="#spatio-temporal-particular"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A general 'location' relation.  The location can be a region of space (connected or disconnected) or an object (physical or abstract).  The value of this relation answers the question 'where is it?' in some sense.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#isaPartOf">
    <rdfs:domain rdf:resource="#SpatialThing"/>
    <rdfs:range rdf:resource="#SpatialThing"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >isaPartOf is a general 'part' relation applicable to spatial regions or objects in some space.  It is a transitive relation.</rdfs:comment>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#TransitiveProperty"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_hasInstanceMethod">
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasInstanceMethod</rdfs:label>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_SYN-CLASS rdf:about="#Entity"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasInstanceMethod  points to a Java method that may be atttached to an instance of a class.  Unlike a class method, which is a  static method, instance methods should be specific to instances. This relation can be used judiciously to allow specifying restrictions on interpretation of the meanings of instances, and to provide a code that may substitute for certain axioms related to an instance.</rdfs:comment>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasInstanceMethod</_SUO-name>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_hasRequiredAttribute">
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Class</_Domain1Type>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <_AXIOMS rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >(KAX-006)
(=>
   (:hasRequiredAttribute ?CLASS ?ATTRIB)
   (forall (?ENT)
      (=>
          (instance ?ENT ?CLASS)
          (property ?ENT ?ATTRIB))))
</_AXIOMS>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasRequiredAttribute</_SUO-name>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >":hasRequiredAttribute is used to assert that every member of a particular class of entities necessarily has a specific attribute."</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_KIF-CLASS rdf:about="#_SYN-CLASS"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasRequiredAttribute</rdfs:label>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_isRestrictedTo">
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:isRestrictedTo</_SUO-name>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <_AXIOMS rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >(KAX-001)
(=>
     (:isRestrictedTo ?REL ?CLASS1 ?CLASS2)
     (forall (?ENT1 ?ENT2)
       (=>
          (and
            (?REL ?ENT1 ?ENT2)
            (instance ?ENT1 ?CLASS1))
          (instance ?ENT2 ?CLASS2))))

(KAX-004)
(&lt;=>
   (:hasRestrictedVal ?CLASS1 ?REL ?CLASS2)
   (:isRestrictedTo ?REL ?CLASS1 ?CLASS2))</_AXIOMS>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:isRestrictedTo</rdfs:label>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <owl:Class rdf:about="#_SKIF-SLOT"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <_Domain2Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Class</_Domain2Type>
    <_Domain2Class rdf:resource="#Entity"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:isRestrictedTo allows one to specify that a relation’s values may be restricted when that relation is applied to some subclass of the original domain 1.  This can help to make the relation more clear, and may limit the range of necessary inferences.  Such restrictions are realized in Protege by modifying the allowed class of a value of a relation at the level of some particular class which is a subclass of the higher-level class on which the relation is defined.  This provision in Protege distinguishes between the top-level definition of a slot and its application at lower levels.
   A companion predicate :hasRestrictedVal assertws the same thjing, but has the first class as argument 1, allowing viewing of the relation in </rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="COSMOtopOWL03_ObjectProperty_11"/>
  <owl:ObjectProperty rdf:ID="_partition3">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A &amp;%partition of a class C is a set of mutually &amp;%disjoint classes (a subclass partition) which covers C.   Every instance of C is an instance of exactly one of the subclasses in the partition.
   There may be more than one partition on a class. In SUMO there are a maximum of 2 partitions.  This slot is created for the possible situation where a class may have three partitions.</rdfs:comment>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
    <rdfs:domain rdf:resource="#_SYN-CLASS"/>
    <rdfs:subPropertyOf>
      <owl:ObjectProperty rdf:ID="partition"/>
    </rdfs:subPropertyOf>
    <_AXIOMS rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >(UAX: SUMAX-39)
(&lt;=>
   (partition @ROW)
   (and
      (exhaustiveDecomposition @ROW)
      (disjointDecomposition @ROW)))</_AXIOMS>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:partition3</_SUO-name>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:partition3</rdfs:label>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_hasDefaultValue">
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <_Domain2Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain2Type>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasDefaultValue</rdfs:label>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <_Domain2Class rdf:resource="#BinaryRelation"/>
    <_AXIOMS rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >(KAX-003)
(=>
     (:hasDefaultValue ?CLASS ?REL ?VAL)
     (forall (?INST)
        (=>
           (and
               (instance ?INST ?CLASS)
               (not
                  (exists (?CLASS2 ?VAL2)
                      (and
                         (instance ?INST ?CLASS2)
                         (or
                             (:hasClassValue ?CLASS2 ?REL ?VAL2)
                             (:hasDefaultValue ?CLASS2 ?REL ?VAL2))
                         (subclass ?CLASS2 ?CLASS)
                         (not (equal ?CLASS2 ?CLASS))
                         (not (equal ?VAL2 ?VAL)))))
           (?REL ?INST ?VAL))))
</_AXIOMS>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >"(:hasDefaultValue ?REL ?CLASS ?VAL) is used to specify that, for every instance of a particular class, the value of the relation ?REL for every instance of class ?CLASS is ?VAL, unless it is overridden by an explicit assignment of the value.  In Protege, such overrides can be accomplished by simply changing the value of the instance.  For the SKIF files, we need an explicit override relation so that the condition for using the default can be described logically rather than programmatically.  The override can be accomplished by using :hasDefaultValue with the subclass as argument, or, if one wants an override that cannot itself be overridden, the relation used is ':hasClassValue'."</rdfs:comment>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasDefaultValue</_SUO-name>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Class</_Domain1Type>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_KIF-CLASS rdf:about="#_SYN-CLASS"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_SYNONYMS">
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_KIF-CLASS rdf:about="#_SYN-CLASS"/>
          <owl:Class rdf:about="#_SKIF-SLOT"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A list of synonyms in natural or formal languages for the concept represetned by this class.</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:SYNONYMS</rdfs:label>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_Domain2Value">
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:Domain2Value</rdfs:label>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <owl:Class rdf:about="#_TernarySlot"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The instance value for the third argument of a higher-arity relation.  It is an instance of :Domain2Class.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_hasClassMethod">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasClassMethod</_SUO-name>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasClassMethod points to a Java method that may be atttached to a class.  When attached to a class, it is equivalent to a static method.  This relation can be used judiciously to allow specifying restrictions on interpretation of classes, and to provide a code that may substitute for certain axioms related to a class.</rdfs:comment>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasClassMethod</rdfs:label>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <owl:Class rdf:about="#_SKIF-SLOT"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_hasName">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasName</_SUO-name>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_KIF-CLASS rdf:about="#_SYN-CLASS"/>
          <_SYN-CLASS rdf:about="#Entity"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >":hasName relates an instance of an entity to a string of linguistic characters used to reference the entity in linguistic communication.  This is the inverse of the SUMO relation 'names', added to allow more flexible representation in Protege.  :hasName can be applied to instances or classes, and can take multiple values.
    The :hasName relation is not a necessary relation since not every entity is named by a SymbolicString and not every SymbolicString is the label for an entity."</rdfs:comment>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasName</rdfs:label>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_InstanceAssertions">
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_SYN-CLASS rdf:about="#Entity"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:InstanceAssertions</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >assertions at the instance level that reference this instance.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_hasInstanceTypes">
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasInstanceTypes</rdfs:label>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasInstanceTypes</_SUO-name>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasInstanceTypes specfies the instance parent type classes -- useful for instances that have multiple direct types.</rdfs:comment>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_SYN-CLASS rdf:about="#Entity"/>
          <owl:Class rdf:about="#_SKIF-SLOT"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_Domain2Class">
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <owl:Class rdf:about="#_TernarySlot"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:Domain2Class</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The third argument of a higher-arity relation, after usual domain and range.</rdfs:comment>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="disjointRelation">
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >disjointRelation</_SUO-name>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <owl:Class rdf:about="#_SKIF-SLOT"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
    <_AXIOMS rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >(UAX: SUMAX-26)
(=>
   (and
      (disjointRelation @ROW)
      (inList ?REL (ListFn @ROW)))
   (instance ?REL Relation))

(UAX: SUMAX-27)
(=>
   (and
      (disjointRelation @ROW)
      (inList ?REL1 (ListFn @ROW))
      (inList ?REL2 (ListFn @ROW))
      (valence ?REL1 ?NUMBER))
   (valence ?REL2 ?NUMBER))

(UAX: SUMAX-32)
(=>
   (and
      (disjointRelation @ROW1)
      (inList ?REL1 (ListFn @ROW1))
      (inList ?REL2 (ListFn @ROW1))
      (not (equal ?REL1 ?REL2))
      (holds ?REL1 @ROW2))
   (not (holds ?REL2 @ROW2)))</_AXIOMS>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="property">
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >property</_SUO-name>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >property is used to directly attribute attributes to entities -- very general.

It is referenced in the SkifTab import program, so is included to avoid error messages.  If not required, it should be deleted.</rdfs:comment>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_SYN-CLASS rdf:about="#Entity"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_hasRestrictedVal">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasRestrictedVal is the companion slot to :isRestrictedTo, with args 1 and 2 reversed, so that it is displayed in the class window for arg2.</rdfs:comment>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_KIF-CLASS rdf:about="#_SYN-CLASS"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <_AXIOMS rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >(KAX-004)
(&lt;=>
   (:hasRestrictedVal ?CLASS ?REL ?CLASS2)
   (:isRestrictedTo ?REL ?CLASS1 ?CLASS2))</_AXIOMS>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasRestrictedVal</rdfs:label>
    <_Domain2Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain2Type>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:hasRestrictedVal</_SUO-name>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <_Domain2Class rdf:resource="#BinaryRelation"/>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Class</_Domain1Type>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="disjoint">
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >disjoint</_SUO-name>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_KIF-CLASS rdf:about="#_SYN-CLASS"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >&amp;%Classes are &amp;%disjoint only if they share no instances, i.e. just in case the result of applying &amp;%IntersectionFn to them is empty.
</rdfs:comment>
    <owl:inverseOf rdf:resource="#disjoint"/>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Class</_Domain1Type>
    <_AXIOMS rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >(UAX: SUMAX-25)
(&lt;=>
   (disjoint ?CLASS1 ?CLASS2)
   (and
      (instance ?CLASS1 NonNullSet)
      (instance ?CLASS2 NonNullSet)
      (forall (?INST)
         (not
             (and
                 (instance ?INST ?CLASS1)
                 (instance ?INST ?CLASS2))))))</_AXIOMS>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#partition">
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A &amp;%partition of a class C is a set of mutually &amp;%disjoint classes (a subclass partition) which covers C.   Every instance of C is an instance of exactly one of the subclasses 
in the partition.</rdfs:comment>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_KIF-CLASS rdf:about="#_SYN-CLASS"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <_AXIOMS rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >(UAX: SUMAX-39)
(&lt;=>
   (partition @ROW)
   (and
      (exhaustiveDecomposition @ROW)
      (disjointDecomposition @ROW)))</_AXIOMS>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_Domain2Type">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Specifies whether the first domain argument is an instance of the specified class or a subclass.
  In SUMO, this signals whether the proposition describing the domains of the relation use the relation name "domain" or "domainSubclass".</rdfs:comment>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:Domain2Type</rdfs:label>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <owl:Class rdf:about="#_TernarySlot"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_Domain1Type">
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:Domain1Type</rdfs:label>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <owl:Class rdf:about="#_SKIF-SLOT"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Specifies whether the first domain argument is an instance of the specified class or a subclass.
  In SUMO, this signals whether the proposition describing the domains of the relation use the relation name "domain" or "domainSubclass".</rdfs:comment>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="_relationAllExists">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >(:relationAllExists ?REL ?CLASS1 ?CLASS2) means that every instance of ?CLASS1 is related to some instance of ?CLASS2 by the ?REL relation.  The name was taken from the CYC rule macro predicate.</rdfs:comment>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <_Domain2Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Class</_Domain2Type>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:relationAllExists</rdfs:label>
    <_AXIOMS rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >[KAX-005]

(=>
    (:relationAllExists ?REL ?CLASS1 ?CLASS2)
    (forall (?INST)
        (=>
            (instance ?INST ?CLASS1)
            (exists (?ENT)
               (and
                   (instance ?ENT ?CLASS2)
                   (?REL ?INST ?ENT))))))</_AXIOMS>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <owl:Class rdf:about="#_SKIF-SLOT"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:relationAllExists</_SUO-name>
    <_Domain2Class rdf:resource="#Entity"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="partition2">
    <rdfs:subPropertyOf rdf:resource="#partition"/>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A &amp;%partition of a class C is a set of mutually &amp;%disjoint classes (a subclass partition) which covers C.   Every instance of C is an instance of exactly one of the subclasses 
in the partition.</rdfs:comment>
    <rdfs:domain rdf:resource="#_SYN-CLASS"/>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <_AXIOMS rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >(UAX: SUMAX-39)
(&lt;=>
   (partition @ROW)
   (and
      (exhaustiveDecomposition @ROW)
      (disjointDecomposition @ROW)))</_AXIOMS>
  </owl:ObjectProperty>
  <owl:DatatypeProperty rdf:ID="_documentation">
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:documentation</rdfs:label>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A relation between objects in the domain of discourse and strings of natural language text.  The domain of &amp;%documentation is not constants (names), but the objects themselves.  This means that one does not quote the names when associating them with their documentation.</rdfs:comment>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_SYN-CLASS rdf:about="#Entity"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:ID="_identicalTo">
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <owl:Class rdf:about="#_SKIF-SLOT"/>
          <_KIF-CLASS rdf:about="#_SYN-CLASS"/>
          <_SYN-CLASS rdf:about="#Entity"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:identicalTo points to other concepts within the ontology that are intended to be the same as the base concept. This is a way to work around the Protege restriction that no frame can be an instanceof more than one class, and no Slot can also be an instance, and no instance can also be a class.</rdfs:comment>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:identicalTo</rdfs:label>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:ID="_LOAD-SEQUENCE">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >LOAD-SEQUENCE is a convenience slot which specifies the sequence in which a logically related block of predicates (or an axiom) was loaded from the input KIF-format file.  The sole function is to allow recreation of the original sequence of statements for the convenience of the ontologist.  A value of 0 is default for newly created concepts.</rdfs:comment>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:LOAD-SEQUENCE</rdfs:label>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <owl:Class rdf:about="#_SKIF-SLOT"/>
          <owl:Class rdf:about="#_KIF-CLASS"/>
          <_KIF-CLASS rdf:about="#_SYN-CLASS"/>
          <_SYN-CLASS rdf:about="#Entity"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#int"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:ID="_slotType">
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:slotType specifies whether a slot is an ordinary predicate, or a function.  If it is a function, the last argument (for whatever arity) serves as the range of the function.  The range will show up in a Protege slot as the 'value' of the slot.
   The accepted values are the strings 'Predicate' and 'Function'.  The default is Predicate.</rdfs:comment>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:slotType</_SUO-name>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:slotType</rdfs:label>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <owl:Class rdf:about="#_SKIF-SLOT"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Instance</_Domain1Type>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:ID="_SUO-name">
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The :SUO-name is the name of an instance that is used for display.  This is an important element of the ontology as it permits the assignment  of instances to multiple classes, a tactic forbidden by the Protege program, which requires that all frame names be unique.
 Thus, if an instance of any concept has a :SUO-name, that name is the one that will appear in "instance" propositions that are exported to a KIF data file.</rdfs:comment>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_SYN-CLASS rdf:about="#Entity"/>
          <owl:Class rdf:about="#_SKIF-SLOT"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:SUO-name</rdfs:label>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:ID="_ClassPredicates">
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <_KIF-CLASS rdf:about="#_SYN-CLASS"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:ClassPredicates shows the list of predicates which are asserted on a class but do not have their own facet pane in the class display  window.  They are given as strings and do not directly point to the classes or instances whjich may be values of the predicate arguments.</rdfs:comment>
    <_Domain1Type rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Class</_Domain1Type>
    <_SUO-name rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:ClassPredicates</_SUO-name>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:ClassPredicates</rdfs:label>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:ID="_AXIOMS">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Axioms from SUMO or other sources, constraining the meaning of the slot.</rdfs:comment>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing"/>
          <owl:Class rdf:about="#_SKIF-SLOT"/>
          <_SYN-CLASS rdf:about="#Entity"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >:AXIOMS</rdfs:label>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <_slotType rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Predicate</_slotType>
  </owl:DatatypeProperty>
  <_SYN-CLASS rdf:ID="MultiIndividualAgent">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >58</_LOAD-SEQUENCE>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Agent-Generic_Cyc__Agent_DOLCE__SentientAgent_SUMO_">
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
#$Agent-Generic is the collection of all agents, or things (like #$Animals, #$Robots, #$DivineBeings, etc.) that have desires and intentions and the presumed ability to act on them. An instance of this collection may be an instance of #$AgentiveArtifact or #$Agent (but not both).

SUUMO:  An &amp;%Agent that has rights but may or may not have responsibilities and the ability to reason.  If the latter are present, then the &amp;%Agent is also an instance of &amp;%CognitiveAgent. Domesticated animals are an example of &amp;%SentientAgents that are not also &amp;%CognitiveAgents.

</rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Agent-Generic[Cyc]%Agent[DOLCE]%SentientAgent[SUMO]</rdfs:label>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >57</_LOAD-SEQUENCE>
        <rdfs:subClassOf rdf:resource="#SomethingExisting"/>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
The collection of all #$Agent-Generics that each consist of other #$Agent-Generics operating together. Usually the constituent agents form some kind of #$Group that itself acts as an #$Agent-Generic. Examples: a #$LegalCorporation, a #$GeographicalAgent, a #$Neighborhood or an #$Industry-Localized. Although it would be a positive exemplar of (#$GroupFn #$Agent), the &amp;apos;group of people whose first names all start with the letter &amp;apos;B&amp;apos;&amp;apos; is a negative exemplar of #$MultiIndividualAgent. In almost all contexts, such a group will not act as an #$Agent in any way. It is less cohesive than some of the least cohesive kinds of #$MultiIndividualAgents such as #$CrowdOfPeople.</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="RealNumber">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SUMO:  Any &amp;%Number that can be expressed as a (possibly infinite) decimal, i.e. any &amp;%Number that has a position on the number line.

OPENCYC 1: MAY 23, 2002
The collection of all the minimal intervals (i.e., points) on the number line; a subcollection of #$IntervalOnNumberLine. Each instance of #$RealNumber is a single point on the real number line, which has no upper or lower bounds. Subcollections of #$RealNumber include #$Integer, #$RationalNumber, #$NegativeNumber, #$PrimeNumber, and others. Note: Real numbers, like other instances of #$IntervalOnNumberLine, are measured along a single number `line&amp;apos;; but complex numbers, quaternions, etc., are n-tuples of numbers, and therefore are instances of #$NTupleInterval. For example, #$ComplexNumber is a subcollection of #$NTupleInterval
</rdfs:comment>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="ComplexNumber">
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="Number">
            <rdfs:subClassOf>
              <_SYN-CLASS rdf:ID="Quantity">
                <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                >Any specification of how many or how much of something there is.  Accordingly, there are two subclasses of &amp;%Quantity: &amp;%Number (how many) and &amp;%PhysicalQuantity (how much).</rdfs:comment>
                <rdfs:subClassOf rdf:resource="#Abstract_object_ISO15926"/>
                <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                >Quantity[SUMO:Direct_subclass_of_Abstract]#</rdfs:label>
                <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
                >87</_LOAD-SEQUENCE>
              </_SYN-CLASS>
            </rdfs:subClassOf>
            <rdfs:subClassOf>
              <_SYN-CLASS rdf:ID="MathematicalObject">
                <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
                >91</_LOAD-SEQUENCE>
                <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                >OPENCYC 1: MAY 23, 2002
A specialization of both #$MathematicalThing and #$IntangibleIndividual. Each instance of #$MathematicalObject is a purely abstract mathematical thing which is also an individual (see #$Individual). Specializations of #$MathematicalObject include #$Quantifier, #$RealNumber, #$Triangle, and #$TruthValue. Note that instances of #$SetOrCollection are not instances of #$MathematicalObject, since they are not instances of #$Individual.
</rdfs:comment> <rdfs:subClassOf rdf:resource="#MathematicalThing"/>
              </_SYN-CLASS>
            </rdfs:subClassOf>
            <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >Number-General[Cyc]%arithmetic_number[ISO15926]%Number[SUMO:Direct_subclass_of_Quantity]#</rdfs:label>
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >Number, in its usual sense, not restricted to integers.
= Number-General_Cyc__arithmetic_number_ISO15926__Number_SUMO

SUMO: A measure of how many things there are, or how much there is, of a certain kind.  &amp;%Numbers are subclassed into &amp;%RealNumber, &amp;%ComplexNumber, and &amp;%ImaginaryNumber.

OPENCYC 1: MAY 23, 2002
A collection of mathematical objects. This is the most general class of numbers, including #$RealNumbers, #$ComplexNumbers, various values of infinity such as Aleph Null, and whatever else might count as a number in mathematics.
</rdfs:comment>
            <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
            >92</_LOAD-SEQUENCE>
          </_SYN-CLASS>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >COSMO NOTE: ComplexNumber includes the reals and integers; in those cases the coefficient of the complex part is zero.

SUMO: A &amp;%Number that has the form: x + yi, where x and y are &amp;%RealNumbers and i is the square root of -1.

OPENCYC 1: MAY 23, 2002:  A specialization of both #$Number-General and #$NTupleInterval. Each instance of #$ComplexNumber can be thought of as a vector of two numbers, which are usually called the real part and the imaginary part of the complex number. Complex numbers may also be considered as corresponding to points in the real plane, where the x axis determines the real component of a complex number and the y axis the imaginary component. The unit value on the real number line is 1, the unit value on the imaginary number line is the square root of -1, generally written `i&amp;apos; in mathematics and `j&amp;apos; in engineering.</rdfs:comment>
      </_SYN-CLASS>
    </rdfs:subClassOf>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="DrugSubstance_Cyc__an_object_">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >18</_LOAD-SEQUENCE>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >DrugSubstance[Cyc:_an_object]</rdfs:label>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="BiologicallyActiveSubstance_SUMO_">
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >BiologicallyActiveSubstance[SUMO]</rdfs:label>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >17</_LOAD-SEQUENCE>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >SUMO: A &amp;%Substance that is capable of inducing a change in the structure or functioning of an &amp;%Organism.  This &amp;%Class includes &amp;%Substances used in the treatment, diagnosis, prevention or analysis of normal and abnormal body function. This &amp;%Class also includes &amp;%Substances that occur naturally in the body and are administered therapeutically.  Finally, &amp;%BiologicallyActiveSubstance includes &amp;%Nutrients, most drugs of abuse, and agents that require special handling because of their toxicity.</rdfs:comment>
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="Substance_SUMO_">
            <rdfs:subClassOf rdf:resource="#PartiallyTangible_Cyc__Object_SUMO__physical-endurant_DOLCE_"/>
            <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
            >16</_LOAD-SEQUENCE>
            <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >Substance[SUMO]</rdfs:label>
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >COSMO Note:  In SUMO a 'Substance' is an Object composed of a particualr substance.  It mihgt be called a 'homogeneous object'.  The same notion in OpenCyc is represented by the use of 'StuffType' metaclasses.  A representation of 'Substance' (e.g. gold, water) that captures more of the linguistic intuition would be under GenericSubstance in COSMOtop.  The elaboration of this concept is deferred until agreement is obtained on the basic issues.

An &amp;%Object in which every part is similar to every other in every relevant respect.  More precisely, something is a &amp;%Substance when it has only arbitrary pieces as parts - any parts have properties which are similar to those of the whole.  Note that a &amp;%Substance may nonetheless have physical properties that vary.  For example, the temperature, chemical constitution, density, etc. may change from one part to another.  An example would be a body of water.</rdfs:comment>
          </_SYN-CLASS>
        </rdfs:subClassOf>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A specialization of #$PartiallyTangible. Each instance of #$DrugSubstance is something that can be introduced into an organism&amp;apos;s body to produce certain physiological effects. This collection includes naturally occuring substances, as well as manufactured substances (for the latter, see the specialization #$DrugProduct).
</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Address-LocationDesignator_Cyc__address_SUMO_is_a_relational_attribute____">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="IDString">
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="CharacterString">
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >OPENCYC 1: MAY 23, 2002
The collection of all strings of characters. Each instance of the collection #$CharacterString is a string of characters or an abstract sequence of symbols. Note that it is _not_ any particular physical, tangible representation; different encodings may represent the same string of characters. An instance of #$CharacterString has characters (instances of #$Character-Abstract) from some fixed character set. An instance of #$CharacterString may be any finite length, including zero (zero-length strings are empty strings, which have no characters). If instances of #$CharacterString are concatenated, the result is also an instance of #$CharacterString, with the length of the resulting string equal to the sum of the lengths of the concatenated strings. Some types (subsets) of #$CharacterString include #$EMailAddress, #$AreaCode, #$PhoneNumber, and #$PhoneCountryCode. Note that a #$CharacterString is ordered formally as a #$List (rather than physically left-to-right or top-to-bottom); thus the &amp;apos;first&amp;apos; character in the #$CharacterString for an Arabic word happens to be the rightmost (first pronounced) character, not the leftmost character, due to the letter-order and word-order convention for Arabic writing.</rdfs:comment>
            <rdfs:subClassOf>
              <_SYN-CLASS rdf:ID="AbstractInformationStructure">
                <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                >OPENCYC 1: MAY 23, 2002
A subcollection of #$AbstractInformationalThing whose instances involve symbols standing in certain relations to one another. Important specializations include #$CharacterString and #$Sentence. #$AbstractInformationStructure also includes abstract diagrams, graphs, and bit strings. The collection can be more precisely defined as follows: Each #$AbstractInformationStructure is such that each of its physical instantiations (see #$instantiationOfAIS) consists of instantiations of instances of #$AtomicSymbol-Abstract, arranged in a certain way. For example, the abstract sentence &amp;apos;The pig flies&amp;apos; is an #$AbstractInformationStructure. Each written instantiation of it consists of an instantiation of the words (symbols) &amp;apos;The&amp;apos;, &amp;apos;pig&amp;apos; and &amp;apos;flies&amp;apos;, written in that order. (If the #$AbstractInformationStructure &amp;apos;The pig flies&amp;apos; were spoken, the same words would appear in the same order, i.e. &amp;apos;The&amp;apos; first, etc., but the sequence would be determined by the arrangement of the words in time, rather than space.) Likewise with abstract diagrams, graphs, etc. Each of these is such that their physical instantiations consist of arrangements of instantiations of instances of #$AtomicSymbol-Abstract. A hard copy of a wiring diagram consists of a group of concrete symbols representing various circuit components, in which these symbols are spatially arranged in a certain in way. The arrangement of the concrete symbols in an instantiation of an #$AbstractInformationStructure is not always a simple matter of arrangement in space or time. The sequence of symbols &amp;apos;0010010111011001&amp;apos; can be instantiated in written, spoken, or electronic forms. In the last case, the order of the symbols is determined by conventions concerning the electronic medium in which it is stored, rather than by any common criterion for precedence or subsequence in space or time.</rdfs:comment>
                <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
                >74</_LOAD-SEQUENCE>
                <rdfs:subClassOf>
                  <_SYN-CLASS rdf:ID="Information-object">
                    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                    >AbstractInformationalThing[Cyc]%information-object[DOLCE-D&amp;S]*</rdfs:label>
                    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
                    >73</_LOAD-SEQUENCE>
                    <rdfs:subClassOf>
                      <_SYN-CLASS rdf:ID="non-agentive-social-object_DOLCE-D_S__MentalEntity_COSMO_suggested">
                        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                        >A social object that is not assumed to internally represent a description. Since social objects are dependent on physical ones, it is not trivial to interpret the local sense in which a social object 'internally represents' a plan. See 'agentive-social-object' for some discussion.
</rdfs:comment>         <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                        >non-agentive-social-object[DOLCE-D&amp;S]%MentalEntity[COSMO–suggested]</rdfs:label>
                        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
                        >106</_LOAD-SEQUENCE>
                        <rdfs:subClassOf rdf:resource="#Entity"/>
                      </_SYN-CLASS>
                    </rdfs:subClassOf>
                    <rdfs:subClassOf>
                      <_SYN-CLASS rdf:ID="IntangibleIndividual">
                        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
                        >66</_LOAD-SEQUENCE>
                        <rdfs:subClassOf rdf:resource="#Abstract_object_ISO15926"/>
                        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                        >OPENCYC 1: MAY 23, 2002
The collection of wholly intangible individuals, a specialization of both #$Intangible and #$Individual. Instances of #$IntangibleIndividual are immaterial, and thus do not have mass, color, or other tangible qualities. Examples include mathematical objects (such as numbers, functions, and relations), attributes, time intervals, space regions, and events. Excluded are sets and collections because, although intangible, they are not individuals.</rdfs:comment>
                        <rdfs:subClassOf>
                          <_SYN-CLASS rdf:ID="PartiallyIntangibleIndividual">
                            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                            >OPENCYC 1: MAY 23, 2002
A specialization of both #$Individual and #$PartiallyIntangible. Each instance of #$PartiallyIntangibleIndividual is an individual that has at least some intangible (i.e. immaterial) component. The instance might be partly tangible (e.g. a copy of a book) and thus be a #$CompositeTangibleAndIntangibleObject, or it might be fully intangible (e.g. a number or an agreement) and thus be an instance of #$IntangibleIndividual.</rdfs:comment>
                            <rdfs:subClassOf rdf:resource="#Individual"/>
                            <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
                            >65</_LOAD-SEQUENCE>
                          </_SYN-CLASS>
                        </rdfs:subClassOf>
                        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                        >IntangibleIndividual*</rdfs:label>
                      </_SYN-CLASS>
                    </rdfs:subClassOf>
                    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                    >COSMO: The name of this Type is from DOLCE: Information objects are social objects. They are realized by some entity. They are ordered (expressed according to) by some system for information encoding. Consequently, they are dependent from an encoding as well as from a concrete realization.They can express a description (the ontological equivalent of a meaning/conceptualization), can be about any entity, and can be interpreted by an agent.From a communication perspective, an information object can play the role of "message". From a semiotic perspective, it playes the role of "expression".

OPENCYC 1: MAY 23, 2002
A heterogeneous collection of abstract objects that pertain to information. Subsumes not only #$Proposition, but also the collections #$Sentence, #$CharacterString, #$AtomicSymbol-Abstract, #$Microtheory, #$PropositionalInformationThing, and #$ConceptualWork. Note that while all #$AbstractInformationalThings are abstract objects (this collection is disjoint with #$SpatialThing-Localized), most instances of this collection can have multiple concrete &amp;apos;embodiments&amp;apos;. A single instance of #$Sentence can be written on several peices of paper (see #$instantiationOfAIS); a #$PropositionalInformationThing may be the content of several concrete documents, such as instances of #$BookCopy (see #$containsInfoPropositional-IBT); and several events, such as spoken utterances, may have a certain #$Proposition as their content (see #$containsInformation). Note that some instances of #$AbstractInformationalThing have temporal extent. Examples include all instances of #$Novel-CW and #$Movie-CW. Others specs are disjoint with #$TemporalThing. Examples include all instances of #$Character-Abstract and #$Proposition.</rdfs:comment>
                  </_SYN-CLASS>
                </rdfs:subClassOf>
              </_SYN-CLASS>
            </rdfs:subClassOf>
            <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
            >75</_LOAD-SEQUENCE>
          </_SYN-CLASS>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
A specialization of #$CharacterString. Each instance of #$IDString is a character string which is used to denote a specific object in some identification mapping. Notable specializations of #$IDString include #$PhoneNumber, #$ProperNameString, and #$ContactInfoString.</rdfs:comment>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >76</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A specialization of #$ContactInfoString. Each instance of #$Address-LocationDesignator is a string that denotes one entire address. For example: President Bill Clinton, White House, 1600 Pennsylvania Avenue, Washington, DC .</rdfs:comment>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Address-LocationDesignator[Cyc]%address[SUMO–is_a_relational_attribute!]##</rdfs:label>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="ArtObject_CYC_ArtWork_SUMO">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Artifact_Cyc_SUMO_material-artifact_DOLCE">
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >SUMO: A &amp;%CorpuscularObject that is the product of a &amp;%Making.

OPENCYC 1: MAY 23, 2002
A specialization of #$InanimateThing. Each instance of #$Artifact is an at least partially tangible thing which was intentionally created by an #$Agent (or a group of #$Agents working together) to serve some purpose or perform some function. In order to create an instance of #$Artifact, it is not necessary that an #$Agent create the matter out of which the #$Artifact is composed; rather, an #$Agent can create an instance of #$Artifact by assembling or modifying existing matter. Examples of #$Artifacts include a wooden flute that&amp;apos;s been whittled from a tree branch, a sawhorse that&amp;apos;s been put together out of boards and nails, and a coin that&amp;apos;s been minted by embossing or by melting liquid silver into a mold. In addition to the obvious human artifacts (buildings, tools, textiles, power lines), the collection #$Artifact also includes certain sorts of things made by #$Animals, such as bird nests, termite mounds, and beaver dams. Artifacts without any tangible parts are excluded from the collection #$Artifact; they are included in the collection #$Artifact-Intangible.

DOLCE: material-artifact: No easy definition of artifactual properties is possible, hence it is better to rely on alternative descriptions and roles: a physical object that shows or is known to have an artifactual origin that counts in the tasks an ontology is supposed to support, will be a material artifact. On the other hand, physical objects that do not show that origin, or that origin is unimportant for the task of the ontology, will be physical bodies. Formally, a restriction is provided here that requires that the collection whose members are (at least some of the) proper parts of a material artifact is *unified* by a plan or project.
</rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Artifact*</rdfs:label>
        <rdfs:subClassOf rdf:resource="#PartiallyTangible_Cyc__Object_SUMO__physical-endurant_DOLCE_"/>
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="Artifact-Generic">
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >Indenged List name: Artifact-Generic_includes_conceptual_works__laws__information_objects_
OPENCYC 1: MAY 23, 2002
A collection of things created by #$Agents. These creations may be either tangible (like a hammer, a bowl, or a bridge) or intangible (like a set of laws, a #$KnowledgeBase, or Beethoven&amp;apos;s Ninth Symphony). Thus, the collection of #$Artifact-Generics is partitioned into #$Artifact and #$Artifact-Intangible (q.v.).</rdfs:comment>
            <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >Artifact-Generic[includes_conceptual_works,_laws,_information_objects]</rdfs:label>
            <rdfs:subClassOf rdf:resource="#TemporalThing"/>
            <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
            >63</_LOAD-SEQUENCE>
          </_SYN-CLASS>
        </rdfs:subClassOf>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >64</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A specialization of both #$HumanAccessibleIBO and #$Artifact. Each instance of #$ArtObject is a tangible object that is a work, or a reproduction of a work, in one of the representational or plastic arts, such as a painting, sculpture, ceramic piece, quilt, or stained glass composition. #$ArtObject does _not_ include as instances plays, movies, music, performance art, or other activities. #$ArtObject is a specialization of #$InformationBearingObject, but its instances need not have any propositional content. Examples of #$ArtObject: the #$StatueOfLiberty, the Mona Lisa, a poster reproduction of Van Gogh&amp;apos;s `Starry Night&amp;apos;, Rodin&amp;apos;s `Burghers of Calais&amp;apos;, a piece of Ju ware from the Sung Dynasty, the windows of Chartres Cathedral, a series of prints by Picasso.

&amp;%Artifacts that are created primarily for aesthetic appreciation.  Note that this &amp;%Class does not include most examples of architecture, which belong under &amp;%StationaryArtifact.
</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >38</_LOAD-SEQUENCE>
  </_SYN-CLASS>
  <Ocean rdf:ID="AtlanticOcean">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The whole Atlantic, North and South.</rdfs:comment>
  </Ocean>
  <_SYN-CLASS rdf:ID="ProperNameString">
    <rdfs:subClassOf rdf:resource="#IDString"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002:  The collection of all proper names, considered as character strings. This includes, as elements, city names such as ``Dallas'', people's names such as ``Douglas'', company names such as ``Apple&amp;apos'', conference names, book titles, etc.</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Hormone_SUMO_">
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Hormone[SUMO]</rdfs:label>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >19</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#BiologicallyActiveSubstance_SUMO_"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SUMO: In &amp;%Animals, a chemical secreted by an endocrine gland whose products are released into the circulating fluid. &amp;%Plant hormones or synthetic hormones which are used only to alter or control various physiologic processes, e.g., reproductive control agents, are assigned to the &amp;%Class &amp;%BiologicallyActiveSubstance. &amp;%Hormones act as chemical messengers and regulate various physiologic processes such as growth, reproduction, metabolism, etc.  They usually fall into two broad categories, viz. steroid hormones and peptide hormones.
</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="OrganicStuff_Cyc_">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >27</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A collection of tangible things. Each instance of #$OrganicStuff is a tangible thing composed of one or more types of organic #$Molecule. Instances of #$OrganicStuff usually have their origin in the bodies (or other products) of living things. Since some organic substances can be synthesized, #$OrganicStuff is not a subset of #$NaturalTangibleStuff. Chemically, instances of #$OrganicStuff have fairly (or very) complex carbon-based structures. Examples include all instances of the collections #$Oil, #$DNAStuff, #$Alcohol-Compound, #$Ivory, and #$AnimalBodyPart.
</rdfs:comment>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OrganicStuff[Cyc]</rdfs:label>
    <rdfs:subClassOf rdf:resource="#PartiallyTangible_Cyc__Object_SUMO__physical-endurant_DOLCE_"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="FieldOfStudy_Cyc_directly_under_AbstractInformationalThing__FieldOfStudy_SUMO_directly_under_Proposition_">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO Note: FieldOfStudy is not a Propsition in OpenCyc:

OPENCYC 1: MAY 23, 2002
A specialization of #$AbstractInformationalThing. Each instance of #$FieldOfStudy is a particular area of study, with its own distinctive set of theories, hypotheses, and problems. Instances of #$FieldOfStudy are typically the subject of teaching and/or research within instances of #$AcademicDepartment (q.v.), although one #$AcademicDepartment may cover several instances of #$FieldOfStudy. Instances of #$FieldOfStudy include #$ArtHistory, #$Physics, and #$ArtificialIntelligence.

SUMO: An academic or applied discipline with recognized experts and with a core of accepted theory or practice.  Note that &amp;%FieldOfStudy is a &amp;%subclass of &amp;%Proposition, because a &amp;%FieldOfStudy is understood to be a body of abstract, informational content, with varying degrees of certainty attached to each element of this content.
</rdfs:comment>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Proposition_the_abstract_propositional_content_of_some_sentence_or_formula_in_any_language_">
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="Information-Content">
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >OPENCYC 1: MAY 23, 2002
A specialization of #$AbstractInformationalThing. Each instance of #$Information-Content is an abstract object that can be the content, or meaning, of some token in some language. A pair of tokens of linguistic objects mean the same thing just in case each has the same content as the other. Instance of this collection can be used to represent the content of an instance of #$ConceptualWork.</rdfs:comment>
            <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
            >79</_LOAD-SEQUENCE>
            <rdfs:subClassOf rdf:resource="#Information-object"/>
          </_SYN-CLASS>
        </rdfs:subClassOf>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Proposition[the_abstract_propositional_content_of_some_sentence_or_formula_in_any_language]</rdfs:label>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >80</_LOAD-SEQUENCE>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >SUMO:  &amp;%Propositions are &amp;%Abstract entities that express a complete thought or a set of such thoughts.  As an example, the formula '(instance Yojo Cat)' expresses the &amp;%Proposition that the entity named Yojo is an element of the &amp;%Class of Cats.  Note that propositions are not restricted to the content expressed by individual sentences of a &amp;%Language.  They may encompass the content expressed by theories, books, and even whole libraries.  It is important to distinguish &amp;%Propositions from the &amp;%ContentBearingObjects that express them.  A &amp;%Proposition is a piece of information, e.g. that the cat is on the mat, but a &amp;%ContentBearingObject is an &amp;%Object that represents this information. A &amp;%Proposition is an abstraction that may have multiple representations: strings, sounds, icons, etc.  For example, the &amp;%Proposition that the cat is on the mat is represented here as a string of graphical characters displayed on a monitor and/or printed on paper, but it can be represented by a sequence of sounds or by some non-latin alphabet or by some cryptographic form

OPENCYC 1: MAY 23, 2002
A collection of intangible individuals. Each instance of #$Proposition is an abstract propositional thing that has some truth value in some context or world. A proposition is assumed to be representable (at least in principle) by a sentence in some formal or natural language. But it should _not_ be assumed that propositions are themselves intrinsically linguistic items in the way that sentences or formulae are. Indeed, propositions are often viewed as extra-linguistic, intensional entities that (while not sentences themselves) are represented or expressed by meaningful sentences (or, on some versions of this view, by concrete tokens of sentences). On such a view it is possible for distinct sentences (either from the same language or from different languages) to express the very same proposition; e.g. &amp;apos;Snow is white.&amp;apos;, &amp;apos;White is the color of snow.&amp;apos;, &amp;apos;Schnee ist weiss.&amp;apos; (in German), and (arguably) &amp;apos;(#$relationAllInstance #$objectHasColor #$SnowMob #$WhiteColor)&amp;apos; (in CycL). Similarly, it is sometimes the case that a single sentence -- when used in different contexts -- will express distinct propositions; e.g. &amp;apos;I am hungry.&amp;apos; said by you and said by me. Most formal languages (such as a first-order predicate calculus) and natural languages (such as English) include the resources for composing expressions that represent propositions from component expressions (that might or might not themselves represent other propositions).

DOLCE: The abstract content of a proposition. Abstract content is purely combinatorial: from this viewpoint, any content that can be generated by means of combinatorial rules is assumed to exist in the domain of quantification (reified abstracts).

</rdfs:comment>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >FieldOfStudy[Cyc:directly_under_AbstractInformationalThing]%FieldOfStudy[SUMO:directly_under_Proposition]</rdfs:label>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >81</_LOAD-SEQUENCE>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Set">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="SetOrType">
        <rdfs:subClassOf rdf:resource="#Entity"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >COSMO:     SetOrType is te union of theTypes Set and Type.

  'Type' in COSMO is used to refer to those intensionally-defined groupings called:
    Class in Ontolingua and Protege; 
    Class in RDF and OWL; 
    Class in SUMO; 
    Collection   in OpenCyc; 
    Universal    in DOLCE;
    Property in Ontology Works' IODE system   

    * The Class 'Type' in COSMO is intended to be equivalent to the classes by those names in those other ontologies.   

    * (isaSubtypeOf A B) means that Type A is a subtype of Type B and that all instance of Type A are also instances of Type B.  
</rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >SetOrCollection[Cyc]%SetOrClass[SUMO]</rdfs:label>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >95</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO: </rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >96</_LOAD-SEQUENCE>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="StationaryArtifact_SUMO">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >NOTE: SUMO StationaryArtifact includes Mines, so it is not only 'freestanding'  structures as in eh Opencyc FixedStructure.

A &amp;%StationaryArtifact is an &amp;%Artifact that has a fixed spatial location.  Most instances of this &amp;%Class are architectural works, e.g. the Eiffel Tower, the Great Pyramids, office towers, single-family houses, etc.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Artifact_Cyc_SUMO_material-artifact_DOLCE"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="GeographicalAgent">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A specialization of both #$MultiIndividualAgent and #$GeographicalThing. Each instance of #$GeographicalAgent is a group of people and/or organizations cohesive enough to be treated as an agent (see the collection #$Agent, of which #$GeographicalAgent is a specialization), and which occupies a particular instance of #$GeographicalRegion. Important specializations of #$GeographicalAgent include #$GeopoliticalEntity, #$University, and #$Neighborhood. Note that instances of #$GeographicalAgent are viewed in two significantly different ways with respect to two different types of geography-related microtheories. In a `physical&amp;apos; geography microtheory (i.e. #$PhysicalGeographyMt and its submicrotheories), geographical agents are clearly distinguished from the regions they occupy. (#$TerritoryFn GEO-AGENT) is used in these contexts to denote the land mass (an instance of #$GeographicalRegion) occupied by a given geographical agent GEO-AGENT. In a `dualist&amp;apos; geography microtheory (i.e. #$DualistGeopoliticalMt and its submicrotheories), on the other hand, geographical agents are viewed as being _both_ agents _and_ land masses (instances of #$GeographicalRegion). Thus, there is little need for #$TerritoryFn in the latter sort of context. (Despite their somewhat paradoxical flavor, dualist microtheories arguably allow Cyc to mimic commonsense reasoning about geographical agents and regions more closely than do the stricter physical microtheories.) There are also some `generic&amp;apos; geography microtheories (e.g. #$WorldGeographyMt and #$UnitedStatesGeographyMt) which are neutral with respect to the physical and dualist views. Also see the shared-note for this constant.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#MultiIndividualAgent"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="TotalValuedRelation">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A TotalValuedRelation is a relation for which some instance of the last argument must exist for every set of instances of all the other arguments.
  Logically, this creates an existential axiom which is equivalent to specifying a minimum cardinality of one for the relation, in several formalisms such as UML.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Relation"/>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Agreement_Cyc_">
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Agreement[Cyc]</rdfs:label>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >108</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A collection of `objects&amp;apos; with temporal extent. Each instance of #$Agreement involves two or more parties, who agree that certain propositions should be true. Making the propositions true may require some action or commitment of wealth on the part of one or more of the #$agreeingAgents. Thus, instances of #$Agreement will usually involve some instances of #$Obligation. Note: Instances of #$Agreement and #$Obligation differ, however, in that an #$obligatedAgent is responsible for the truth of all of the propositions in an obligation. In an #$Agreement, some agents may not be responsible for all of the propositions in the agreement being true. For example, in a loan agreement, the borrower agrees to give the lender back the money, but the borrower is the only #$obligatedAgent for the repayment. Note that #$obligatedAgents need not be among the #$agreeingAgents in the agreement that involves or generates the obligation. For example, the Board of Directors of XYZCorporation may agree that some non-director will assume the post and duties of President of XYZCorporation. Moreover, #$agreeingAgents aren&amp;apos;t always #$obligatedAgents; e.g., Wanda and Paul may agree that Paul alone is obligated to do some task. Examples include instances of #$PeaceAccord, #$LegalAgreement, #$InformalAgreement, #$BusinessPartnershipAgreement, #$WorkAgreement, #$SalesAgreement, #$MaintenanceAgreement, #$Reservation, #$Appointment, etc.
</rdfs:comment>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Artifact-Intangible">
        <rdfs:subClassOf rdf:resource="#Artifact-Generic"/>
        <rdfs:subClassOf rdf:resource="#IntangibleIndividual"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Anything createtd by a cognitive agent that is not a physical object.

OPENCYC 1: MAY 23, 2002
A specialization of both #$IntangibleIndividual and #$Artifact-Generic. Each instance of #$Artifact-Intangible is an intangible thing intentionally created by an agent or agents. Important specializations of #$Artifact-Intangible include #$ComputerLanguage, #$ConceptualWork, and #$Agreement.
</rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Artifact-Intangible[Cyc]*</rdfs:label>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >72</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:subClassOf rdf:resource="#Information-Content"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="VegetableMatter">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >29</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A specialization of both #$NaturalTangibleStuff and #$OrganicStuff. Each instance of #$VegetableMatter is a piece of stuff (solid, liquid, or, improbably but conceivably, gaseous) which is a piece of vegetable material. Important specializations of #$VegetableMatter include #$Plant and #$PlantProduct.
</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#OrganicStuff_Cyc_"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="CommunicationConvention_Cyc__">
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >CommunicationConvention[Cyc]*</rdfs:label>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >118</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#Information-object"/>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="description_DOLCE-D_S__MentalObject_COSMO_suggested__">
        <rdfs:subClassOf rdf:resource="#Artifact-Intangible"/>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >description[DOLCE-D&amp;S]%MentalObject[COSMO–suggested]*</rdfs:label>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >A description is a social object which represents a conceptualization (e.g. a mental object or state), hence it is generically dependent on some agent and communicable. Descriptions define or use concepts or figures, are expressed by an information object and can be satisfied by situations. The typology of descriptions is still preliminary.</rdfs:comment>
        <rdfs:subClassOf rdf:resource="#non-agentive-social-object_DOLCE-D_S__MentalEntity_COSMO_suggested"/>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >68</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
The collection of conventions used to encode and interpret things which bear information; a syntax together with a semantic mapping. Instances include natural languages like French or English, database data formats, and computer languages or idiosyncratic systems of gestures or symbols known only by a small group of people.</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="ScalarInterval">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The class that includes all numerical measures.
OPENCYC 1: MAY 23, 2002
A specialization of #$NTupleInterval. Each proper subcollection SCALAR of #$ScalarInterval (with some exceptions, such as #$ScalarPointValue) has the following two properties: 1) the collection of point instances of SCALAR (i.e., those instances of SCALAR that are _not_ proper intervals - see the collection #$ScalarPointValue) is ordered by some `natural&amp;apos; linear ordering (i.e., some `natural&amp;apos; relation that is reflexive, antisymmetric, and transitive on the collection of point instances of SCALAR), 2) SCALAR is closed under addition (#$PlusFn), so that the sum of any two instances of SCALAR will also be an instance of SCALAR. Notable specializations of #$ScalarInterval include #$Time-Quantity, #$Integer, and #$Distance.
</rdfs:comment>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="NTupleInterval">
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >93</_LOAD-SEQUENCE>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
A specialization of #$Tuple. Each instance of #$NTupleInterval is a tuple whose items are all intervals. Notable specializations of #$NTupleInterval include #$ScalarInterval, #$VectorInterval, and #$ComplexNumber.
</rdfs:comment>
        <rdfs:subClassOf rdf:resource="#MathematicalObject"/>
      </_SYN-CLASS>
    </rdfs:subClassOf>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="UnitOfMeasure_SUMO__represented_in_Cyc_as_functions">
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >UnitOfMeasure[SUMO:–represented_in_Cyc_as_functions]</rdfs:label>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >85</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >NOTE: In OpenCyc a UnitOfMeasure is a function in itself; in SUMO, measures are expressed as the return value of a special function MeasureFn, taking numbers and untis of measure as arguments.  These are convertible representations.

A standard of measurement for some dimension. For example, the &amp;%Meter is a &amp;%UnitOfMeasure for the dimension of length, as is the &amp;%Inch.  There is no intrinsic property of a &amp;%UnitOfMeasure that makes it primitive or fundamental; rather, a system of units (e.g. &amp;%SystemeInternationalUnit) defines a set of orthogonal dimensions and assigns units for each.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#IntangibleIndividual"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="GeopoliticalEntity">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Organization">
        <rdfs:subClassOf rdf:resource="#MultiIndividualAgent"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >SUMO: An &amp;%Organization is a corporate or similar institution. The &amp;%members of an &amp;%Organization typically have a common purpose or function. Note that this class also covers divisions, departments, etc. of organizations.  For example, both the Shell Corporation and the accounting department at Shell would both be instances of &amp;%Organization. Note too that the existence of an &amp;%Organization is dependent on the existence of at least one &amp;%member (since &amp;%Organization is a subclass of &amp;%Collection). Accordingly, in cases of purely legal organizations, a fictitious &amp;%member should be assumed.


OPENCYC 1: MAY 23, 2002
The collection of all organizations. Each instance of #$Organization is a group whose group-members are instances of #$IntelligentAgent. In each instance of #$Organization, certain relationships and obligations exist between the members of the organization, or between the organization and its members. Instances of #$Organization include both informal and legally constituted organizations. Each instance of #$Organization can undertake projects, enter into agreements, own property, and do other tasks characteristic of agents; consequently, #$Organization is a specialization of the collection #$Agent. Notable specializations of #$Organization include #$LegalGovernmentOrganization, #$CommercialOrganization, and #$GeopoliticalEntity.
</rdfs:comment>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >59</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A specialization of #$Organization and of #$LegalAgent and of #$GeographicalAgent, instances of this collection control #$GeographicalRegions. Each instance of #$GeopoliticalEntity includes a governing body, but is more than just that governing body. Important subcollections include #$Country, #$IndependentCountry, #$State-Geopolitical, #$City, and #$Province. Instances include #$CityOfTokyoJapan, #$BronxNY-Borough, #$Alaska-State, #$Rwanda, #$Singapore, #$InnerMongolia, #$Somerset-CountyEngland, and #$Taiwan-RepublicOfChina. A central feature of this collection is that geopolitical-entities (indeed, all #$GeographicalAgents) are viewed in two significantly different ways with respect to two different types of geography-related microtheories. In a physical geography microtheory (i.e. #$PhysicalGeographyMt and its submicrotheories), geopolitical-entities are clearly distinguished from the regions they control. (#$TerritoryFn GEO-POL) is used in these contexts to denote the land mass (a #$GeopoliticalRegion) of a given geopolitical-entity GEO-POL. In a dualist geography microtheory (i.e. #$DualistGeopoliticalMt and its submicrotheories), on the other hand, geopolitical-entities are viewed as being _both_ agents _and_ land masses (i.e. #$GeographicalRegions). Thus, there is little need for #$TerritoryFn in the latter sort of context. (Despite their somewhat paradoxical flavor, dualist microtheories arguably allow Cyc to mimic commonsense reasoning about geopolitical entities and regions more closely than do the stricter physicalist microtheories.) There are also some generic geography microtheories (e.g. #$WorldGeographyMt and #$UnitedStatesGeographyMt) which are neutral with respect to the physical and dualist views. Also see the shared-note for this constant.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#GeographicalAgent"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Hole-Cavity-Conduit_SNAP-BFO_parent_in_DOLCE_would_be_feature_">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >14</_LOAD-SEQUENCE>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Hole-Cavity-Conduit[SNAP-BFO:parent_in_DOLCE_would_be_feature]</rdfs:label>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="feature_DOLCE_parasitic_on_objects__parent_TwoOrHigherDimensionalThing_">
        <rdfs:subClassOf rdf:resource="#TwoOrHigherDimensionalThing"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >DOLCE: Features are 'parasitic entities', that exist insofar their host exists. Typical examples of features are holes, bumps, boundaries, or spots of color. Features may be relevant parts of their host, like a bump or an edge, or dependent regions like a hole in a piece of cheese, the underneath of a table, the front of a house, or the shadow of a tree, which are not parts of their host. All features are essential wholes, but no common unity criterion may exist for all of them. However, typical features have a topological unity, as they are singular entities.Here only features of physical endurants are considered.
</rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >feature[DOLCE–parasitic_on_objects;_parent=TwoOrHigherDimensionalThing]</rdfs:label>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >12</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
The collection of all cavities, including instances of #$Crevice, deep concavities or holes, and cavities of containers (for example, the interior of a box). Instances of #$Cavity can include walls as parts, in which case they are instances of #$CavityWithWalls. Instances of #$Cavity, unlike instances of #$Container, do not have well defined outside walls.
</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="IrishThing">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A test class to illustrate necessary conditions</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#spatio-temporal-particular"/>
    <owl:equivalentClass>
      <owl:Restriction>
        <owl:hasValue>
          <CountryArea rdf:ID="IrelandTerritory">
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >IrelandTerritory is the physical piece of Earth that is controlled by the Republic of Ireland - not the whole island.</rdfs:comment>
          </CountryArea>
        </owl:hasValue>
        <owl:onProperty rdf:resource="#isLocatedAt"/>
      </owl:Restriction>
    </owl:equivalentClass>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="GeographicalRegion_Cyc-includes_other_planets_">
    <rdfs:subClassOf rdf:resource="#PartiallyTangible_Cyc__Object_SUMO__physical-endurant_DOLCE_"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO note: this concept is interpreted as including everything that is physically near the earth's surface in an area, including people.  So a person in an area will be part of that physical area.  Other notions of location will differ.  This is to represent areas as physical objects.

OPENCYC 1: MAY 23, 2002
A specialization of #$GeographicalThing. Each instance of #$GeographicalRegion is a spatial region that includes some piece of the surface of a planet (usually #$PlanetEarth). Each instance of #$GeographicalRegion is a #$PartiallyTangible entity that may be represented on a map of the planet. This includes purely topographical regions like mountains and underwater spaces, places defined by demographics (e.g., language areas) and territory otherwise demarcated (e.g. #$TimeZones). In dualist geopolitical contexts [see #$DualistGeopoliticalMt], instances of #$GeopoliticalEntity are also considered to be instances of #$GeographicalRegion. In all cases the region in question must contain some tangible component with which it is possible to make physical contact. The instances of #$GeographicalRegion contrast in this respect with the instances of #$GeographicalThing-Intangible, which are wholly intangible. Examples of #$GeographicalRegions: #$RockyMountainStates-USRegion, the #$ContinentOfAustralia, #$SinaiPeninsula, and -- in dualist geopolitical contexts -- #$YaleUniversity and #$CityOfPittsburghPA. Some important types of regions are represented by the sub-collections #$LanguageArea, #$TimeZone, #$PostalCodeRegion, #$EcologicalRegion, #$ConstructionSite, and -- in dualist geopolitical contexts -- #$GeopoliticalEntity. No instances of #$GeographicalRegion are wholly indoor locations.</rdfs:comment>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="GeographicalThing">
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
This collection may be thought of as consisting of all the entities which are localizable within the context of a geography, in the sense that they might plausibly be represented on a map. This includes both #$PartiallyTangible entities like #$GeographicalRegions, and also entities that may be wholly #$Intangible, like territorial borders and boundaries, #$LatitudeLines and #$LongitudeLines, trajectories of missiles and courses of ships, and the #$Equator.</rdfs:comment>
        <rdfs:subClassOf rdf:resource="#SpatialThing-Localized"/>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >GeographicalRegion[Cyc-includes_other_planets]</rdfs:label>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >5</_LOAD-SEQUENCE>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Type">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO: Type in COSMO is used to refer to those intensionally-defined groupings called:

    Class in Ontolingua and Protege; 
    Class in RDF and OWL; 
    Class in SUMO; 
    Collection   in OpenCyc; 
    Universal    in DOLCE;
    Property in Ontology Works' IODE system    (31B1)

    * The Type 'Type' in COSMO is intended to be equivalent to the types (classes)  by those names in those other ontologies.   
    * (isaSubtypeOf A B) means that Type A is a subtype of Type B and that all instance of Type A are also instances of Type B.  

SUMO:  &amp;%Classes differ from &amp;%Sets in three important respects. First, &amp;%Classes are not assumed to be extensional.  That is, distinct &amp;%Classes might well have exactly the same instances.  Second, &amp;%Classes typically have an associated `condition' that determines the instances of the &amp;%Class.  So, for example, the condition `human' determines the &amp;%Class of &amp;%Humans.  Note that some &amp;%Classes might satisfy their own condition (e.g., the &amp;%Class of &amp;%Abstract things is &amp;%Abstract) and hence be instances of themselves.  Third, the instances of a class may occur only once within the class, i.e. a class cannot contain duplicate instances.


OPENCYC 1: MAY 23, 2002: The collection of all Cyc collections. Cyc collections are natural kinds or classes, as opposed to mathematical sets; their instances have some common attribute(s). Each Cyc collection is like a set in so far as it may have elements, subsets, and supersets, and may not have parts or spatial or temporal properties. Sets, however, differ from collections in that a mathematical set may be an arbitrary set of things which have nothing in common (see #$Set-Mathematical). In contrast, the instances of a collection will all have in common some feature(s), some `intensional&amp;apos; qualities. In addition, two instances of #$Collection can be co-extensional (i.e., have all the same instances) without being identical, whereas if two arbitrary sets had the same elements, they would be considered equal. As with any Cyc constant, an instance of #$Collection should be created only if it is expected to have some purpose or utility. Moreover, the `best&amp;apos; collections to create are the ones which are impossible to define precisely, yet about which there are rules and other things to say. E.g., `WhiteCat&amp;apos; is not a good element of #$Collection to create, because it&amp;apos;s easy to define with other Cyc concepts, and there&amp;apos;s not much to say about the collection of white cats; but `WhiteCollarWorker&amp;apos; could be a good instance of #$Collection, because it is hard to define exactly, yet there are many things to say about it.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#SetOrType"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Language_SUMO_physical_not_abstract__">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >25</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A system of signs for expressing thought.  The system can be either natural or artificial, i.e. something that emerges gradually as a cultural artifact or something that is intentionally created by a person or group of people.
</rdfs:comment>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="LinguisticExpression_SUMO_only_">
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >This is the subclass of &amp;%ContentBearingObjects which are language-related.  Note that this &amp;%Class encompasses both &amp;%Language and the the elements of &amp;%Languages, e.g. &amp;%Words.
</rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >LinguisticExpression[SUMO_only]</rdfs:label>
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="InformationBearingObject_Cyc_ContentBearingObject_SUMO">
            <rdfs:subClassOf rdf:resource="#Artifact_Cyc_SUMO_material-artifact_DOLCE"/>
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >OPENCYC 1: MAY 23, 2002
A specialization of both #$InformationBearingThing and #$CompositeTangibleAndIntangibleObject. Each instance of #$InformationBearingObject is an object that can be interpreted, by an interpreter understanding its conventions, to yield a chunk or chunks of information. #$InformationBearingObject includes all of the following: (1) artifacts made solely for the purpose of conveying information (e.g., a newspaper, or a children&amp;apos;s science video); (2) artifacts that convey information in addition to their intended function (e.g., Neolithic pottery); and (3) non-artifacts, such as a person&amp;apos;s fingerprints, gestures, and utterances, which may be interpreted to yield information. Note: `an IBO&amp;apos; abbreviates `an information bearing object&amp;apos;. Cf. #$InformationBearingWavePropagation. See also #$containsInformation.

SUMO: Any &amp;%SelfConnectedObject that expresses information.</rdfs:comment>
          </_SYN-CLASS>
        </rdfs:subClassOf>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >24</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Language[SUMO–physical_not_abstract]#</rdfs:label>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="QuintaryRelation">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A relation with five arguments.</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#Relation"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="State_DOLCE">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="stative_DOLCE">
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="Situation-Temporal_Cyc__perdurant_DOLCE_">
            <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
            >44</_LOAD-SEQUENCE>
            <rdfs:subClassOf rdf:resource="#TemporalThing"/>
            <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >Situation-Temporal[Cyc]%perdurant[DOLCE]</rdfs:label>
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >COSMO note: This is a broad category that includes events and  persistent states.

OPENCYC 1: MAY 23, 2002
A subcollection of both #$Situation and #$TemporalThing. #$Situation-Temporal is the collection of all instances of #$Situation that have duration or other temporal properties . Thus, #$Situation-Temporal subsumes #$Event and #$StaticSituation, as well as some other specializations of #$Situation. It does _not_ subsume any specializations of #$Situation that have atemporal instances.

DOLCE: Perdurants (AKA occurrences) comprise what are variously called events, processes, phenomena, activities and states. They can have temporal parts or spatial parts. For instance, the first movement of (an execution of) a symphony is a temporal part of the symphony. On the other hand, the play performed by the left side of the orchestra is a spatial part. In both cases, these parts are occurrences themselves. We assume that objects cannot be parts of occurrences, but rather they participate in them. Perdurants extend in time by accumulating different temporal parts, so that, at any time they are present, they are only partially present, in  the sense that some of their proper temporal parts (e.g., their previous or future phases) may be not present. E.g., the piece of paper you are reading now is wholly present, while some temporal parts of your reading are not present yet, or any more. Philosophers say that endurants are entities that are in time, while lacking temporal parts (so to speak, all their parts flow with them in time). Perdurants, on the contrary, are entities that happen in time, and can have temporal parts (all their parts are fixed in time).</rdfs:comment>
          </_SYN-CLASS>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >COSMO note: DOLCE distinguishes Events that have temporal parts with similar character, i.e. the same sort of thing occurs throughout the tie interval of the Event.  In OpenCyc, such 'homogeneous' events are represented using 'StuffType' metaclasses.  A special subclass is the 'State' where nothing happens over some time interval.  'State' is an important concept in PSL and situation calculus.

DOLCE: An occurrence-type is stative or eventive according  to whether it holds of the mereological sum of two of its instances, i.e. if it is  cumulative or not. A sitting occurrence is stative since the sum of two sittings  is still a sitting occurrence.</rdfs:comment>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO note:  DOLCE has a convoluted description of what a 'State' is.  For COSMO, it is very simply an interval of time during which nothing changes -- i.e. nothing that the knowledge enterer considers significant for her/his purposes.  This can be viewed as the limiting case of an Event, in which so little of significance happens that it is not worth mentioning.

DOLCE: Within stative occurrences, we distinguish between  states and processes according to homeomericity: sitting is classified as a state  but running is classified as a process, since there are (very short) temporal parts  of a running that are not themselves runnings.In general, states differ from situations because they are not assumed to have a description from which they depend. They can be sequenced by some course, but they do not require a description as a unifying criterion.On the other hand, at any time, one can conceive a description that asserts the constraints by which a state of a certian type is such, and in this case, it becomes a situation.Since the decision of designing an explicit description that unifies a perdurant depends on context, task, interest, application, etc., when aligning an ontology do DLP, there can be indecision on where to align a state-oriented class. For example, in the WordNet alignment, we have decided to put only some physical states under 'state', e.g. 'turgor', in order to stress the social orientedness of DLP. But whereas we need to talk explicitly of the criteria by which we conceive turgor states, these will be put under 'situation'.Similar considerations are made for the other types of perdurants in DOLCE.A different notion of event (dealing with change) is currently investigated for further developments: being 'achievement', 'accomplishment', 'state', 'event', etc. can be also considered 'aspects' of processes or of parts of them. For example, the same process 'rock erosion in the Sinni valley' can be conceptualized as an accomplishment (what has brought the current state that e.g. we are trying to explain), as an achievement (the erosion process as the result of a previous accomplishment), as a state (if we collapse the time interval of the erosion into a time point), or as an event (what has changed our focus from a state to another).In the erosion case, we could have good motivations to shift from one aspect to another: a) causation focus, b) effectual focus, c) condensation d) transition (causality).If we want to consider all the aspects of a process together, we need to postulate a unifying descriptive set of criteria (i.e. a 'description'), according to which that process is circumstantiated in a 'situation'. The different aspects will arise as a parts of a same situation.
</rdfs:comment>
  </_SYN-CLASS>
  <Church rdf:ID="TempleChurch">
    <isaPhysicalPartOf>
      <CityArea rdf:ID="LondonArea">
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The physical area of The city of London, the capital of the United Kingdom.  This object includes everything in the city (at any given time), including the people.</rdfs:comment>
        <isaPhysicalPartOf>
          <CountryArea rdf:ID="UnitedKingdomArea">
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >The physical area of the United Kingdom, including everything in it.</rdfs:comment>
          </CountryArea>
        </isaPhysicalPartOf>
      </CityArea>
    </isaPhysicalPartOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Fom Wikipedia 2006-01-05
   The Temple Church is a late 12th century church in London located between Fleet Street and the River Thames. It was originally constructed as the church of a monastic complex known as the Temple, the headquarters in England of the Knights Templar. The Temple was the scene of important negotiations leading to the signing of Magna Carta in 1215. After the destruction of the Templar order in the early 14th century, the Temple became Crown property and was let to two groups of lawyers that evolved into the Inner Temple and Middle Temple, which are two of the four Inns of Court. The two Inns both use the church, which is famous for its effigy tombs. It was heavily damaged during the Second World War but has been largely restored. The area around the Temple Church is known as "Temple" and nearby is Temple tube station. It was also featured as part of the novel the Da Vinci Code.

In the mid 12th century, before the construction of the church, the Knights Templar in London had met at a site in High Holborn in a structure originally established by Hughes de Payens. Because of the growth of the order, by the 1160s the site had become too confined, and the order purchased the property of the current site for establishment of a larger compound. In addition to the church, the new compound originally contained residences, military training facilities, and recreational grounds for the military brethren and novices, who were not permitted to go into the city without the permission of the Master of the Temple.

The church building comprises two separate sections. The original nave section, called the Round Church, and an adjoining rectangular section, built approximately half a century later, called the Chancel.
[edit]

The Round Church

In keeping with the traditions of the order, the nave of the church was constructed on a round design based on the Church of the Holy Sepulchre in Jerusalem. The nave is 55 feet in diameter is surrounded by the first-ever free-standing dark Purbeck marble columns. It is probable that the walls and grotesque heads were originally painted in colours.

It was consecrated on February 10, 1185 in a ceremony by Heraclius, the Patriarch of Jerusalem. It is believed that Henry II was probably present at the consecration.

The Round Church contains the marble effigies of nine medieval knights, the most famous of whom is William Marshal, who is enshrined next to his sons. In January 1215 William served as a negotiator during a meeting in the Temple between King John and the barons, who demanded that John uphold the rights enshrined the Coronation Charter of his predecessor Richard I. William swore on behalf of the king that the grievances of the barons would be addressed in the summer, leading to John's signing of Magna Carta in June. William later became regent during the reign of John's son, Henry III, who later expressed a desire to be buried in the church.

The Chancel

In response to Henry III's desire to be buried in the church, in the early 13th century, the choir of the original church was pulled down and a new larger structure, now called the Chancel, was built. It was consecrated on Ascension Day 1240. Although Henry later altered his will with instructions to be interred in Westminster Abbey, one of his sons, who died in infancy, is buried in the Chancel.

The chancel comprises a central aisle and two side aisles of identical width. The height of the vault is 36 feet 3 inches. During the bombing raid in World War II (see below), the dark Purbeck marble columns of the Chancel cracked from the intense heat Although they still supported the vault, they were deemed unsound and replaced by replicas. The original columns had a light outward lean, an architectural quirk which was duplicated in the replacement columns.

Early Use by the Templars

The order was very powerful in England during its existence. The Master of the Temple sat in parliament as primus baro (the first baron of the realm). The compound was regularly used as a residence by kings and by legates of the Pope. The temple also served as an early depository bank, sometimes in defiance of the Crown's wishes to seize the funds of nobles who had entrusted their wealth there. The independence and wealth of the order throughout Europe is considered by most historians to have been the primary cause of its eventual downfall .

Later History

After the destruction and abolition of the Knights Templar in 1307, Edward II took control of the church as a Crown possession. It was later given to the Knights Hospitaller, who rented the Temple to two colleges of lawyers. One college moved into the part of the Temple previously used by the Temple's knights, and the other into the part previously used by its priests, and they shared the use of the church. The colleges evolved into the Inner and Middle Temples, two of the four Inns of Court. Following a later agreement in 1608 by James I, the two Inns were granted the use of the church in perpetuity and continue to use the Temple as their chapel to the present day.

In 1540, the church became the property of The Crown once again when Henry VIII abolished the Knights Hospitaller in England and confiscated their property. Henry provided a priest for the church under the former title "Master of the Temple". In the 1580s, the church was the scene of the Battle of the Pulpits, a theological conflict between Calvinists and supporters of the Church of England.

The church went undamaged in the Great Fire of London in 1666. Nevertheless, it was refurbished by Christopher Wren, who made extensive modifications to the interior, including the introduction of an organ to the church for the first time. The church was restored again in 1841 by Smirke and Burton, who decorated the walls and ceiling in the high Victorian Gothic style, in an attempt to bring the church back to its original appearance.

On May 10, 1941, during the height of the Battle of Britain, a German air raid of incendiary bombs set the roof of the Round Church on fire, and the fire quickly spread by wind to the nave and chapel. The organ and all the wood of the church, including the Victorian renovations, were destroyed. During the renovation, it was discovered that the renovations made by  Wren in the 17th century were in storage and were replaced in their original position. The church was rededicated in November 1958.</rdfs:comment>
  </Church>
  <_SYN-CLASS rdf:ID="Surface-Generic_parent_in_DOLCE_would_be_feature_">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >13</_LOAD-SEQUENCE>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Surface-Generic[parent_in_DOLCE_would_be_feature]</rdfs:label>
    <rdfs:subClassOf rdf:resource="#feature_DOLCE_parasitic_on_objects__parent_TwoOrHigherDimensionalThing_"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
The collection of all surfaces, tangible or intangible (see #$Surface-Physical and #$Surface-Intangible), of spatial things. Each instance of #$Surface-Generic is a spatial thing that has extent in at least two dimensions, and either has no thickness (i.e. is a two dimensional object) or has an insignificant thickness compared to its length and width. (If it is a closed surface, e.g. an apple skin, then any significant subregion of it must have insignificant thickness compared to that subregion&amp;apos;s length and width). Thus generic surfaces might be two- or three-dimensional; tangible or intangible; spatially connected or not; they might be flat, curved, folded, or crumpled. Other examples: the skin of a basketball, the face-up side of a table top, and a particular face of an abstract cube.
</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="ComplexContext">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Context">
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >COSMO: Context is a very general class of entities that can affect the truth of a logical sentence.  A Context can be a a time interval, location, belief system, fictional world, theory, hypothetical world, counterfactual situation, or or own real world.  Every assertion in the COSMO ontology is implicitly true only in the context of the COSMO ontology, which is itself a theory.  But that implicit qualification does not appear directly in any asertion - it can be explicitly mentioned if and when COSMO assertions are referenced in other ontologies.
</rdfs:comment>
        <rdfs:subClassOf rdf:resource="#Entity"/>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A ComplexContext is a Context which has components of different Types.  One type will be time interval, another will be Location-generic, a third will be 'World' which by default will be in our real world, but can be in any possible or fictional wolrd.  Another will be TextualContext, which can affect the interpretation of words in a text.
  To be true in a ComplexContext it is necessary to be true in all parts of that ComplexContext.  However, everey part will have a default meaning 'any', i.e. that particular part of the complex context does not apply to that particular assertion.
</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Satellite_SUMO">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SUMO; &amp;%Satellite is the collection of bodies that revolve around some  astronomical body, e.g., planets around a star.
</rdfs:comment>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="AstronomicalObject">
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
A specialization of #$InanimateThing-Natural. Each instance of #$AstronomicalObject is an object of interest to astronomers. Some, but not all, instances of #$AstronomicalObject are also instances of #$CelestialObject, the collection of heavenly bodies visible from the Earth. Notable specializations of #$AstronomicalObject include #$Star, #$Planet, and #$Galaxy.
</rdfs:comment>
        <rdfs:subClassOf rdf:resource="#PartiallyTangible_Cyc__Object_SUMO__physical-endurant_DOLCE_"/>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >39</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >41</_LOAD-SEQUENCE>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Satellite[SUMO]</rdfs:label>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Airport-Physical">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A specialization of both #$FixedStructure and #$TransportFacility. Each instance of #$Airport-Physical is a facility which includes at least one runway where airplanes can take off and land. Instances of #$Airport-Physical may also have terminals and an air control tower, in addition to having a runway. See also the related collection #$AirportOrganization.

SUMO difference: Airport in SUMO is a LandTransitway</rdfs:comment>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="FixedStructure">
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
A specialization of #$ConstructionArtifact. Each instance of #$FixedStructure is a humanly-constructed, freestanding object that exists in a fixed location; e.g., buildings, pyramids, the Great Wall of China, dams, elevated roadways, canals, and so on. Such structures may have parts which are also instances of #$FixedStructure (e.g., bridge pilings) and parts which are not freestanding (e.g., the span of a bridge, or a room in a building).</rdfs:comment>
        <rdfs:subClassOf rdf:resource="#StationaryArtifact_SUMO"/>
      </_SYN-CLASS>
    </rdfs:subClassOf>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="SpaceTimeRegion_SPAN-BFO__spatio-temporal-region_DOLCE">
    <rdfs:subClassOf rdf:resource="#Entity"/>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >125</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >DOLCE: Any region resulting from the composition of a space region with a temporal region, i.e. being present in region r at time t.</rdfs:comment>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SpaceTimeRegion[SPAN-BFO]%spatio-temporal-region[DOLCE]</rdfs:label>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Procedure_SUMO__Method_DOLCE_">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Specification_COSMO-suggested_">
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Specification[COSMO-suggested]</rdfs:label>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >COSMO: A Specification is a broad catagory of intentionally created abstract informational artifacts whose purpose is to describe a series of steps that may be taken to accomplish a goal.  It is a mental object having ordered components, the order of which is designed to accomplish a purpose.  The steps may be abstract things like computational events, or physical things such as in industrial processes.  The format of a formatted document is a specification,i.e. it specifies how a document of that type is to be constructed.  Likewise a grammar or computer program is a specification.

A specification does not necessarily require that the steps be in sequence.  If they must be in sequence, it is a procedure.</rdfs:comment>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >114</_LOAD-SEQUENCE>
        <rdfs:subClassOf rdf:resource="#description_DOLCE-D_S__MentalObject_COSMO_suggested__"/>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >115</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >DOLCE: A description that contains a specification to do, realize, behave, etc. Subclasses are plan, technique, practice, project, etc.

A sequence-dependent specification.  Some examples are &amp;%ComputerPrograms, finite-state machines, cooking recipes, musical scores, conference schedules, driving directions, and the scripts of plays and movies.</rdfs:comment>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Procedure[SUMO]%Method[DOLCE]</rdfs:label>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="UnaryRelation">
    <rdfs:subClassOf rdf:resource="#Relation"/>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A Relation with one argument.</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Path-Customary">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Path-Generic">
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >COSMO: </rdfs:comment>
        <rdfs:subClassOf rdf:resource="#Entity"/>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >100</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >101</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO: </rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="QuaternaryFunction">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Function-Denotational_Cyc__Function_SUMO_">
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >90</_LOAD-SEQUENCE>
        <rdfs:subClassOf rdf:resource="#Relation"/>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Function-Denotational[Cyc]%Function[SUMO]</rdfs:label>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >SUMO:  A &amp;%Function is a term-forming &amp;%Relation that maps from a n-tuple of arguments to a range and that associates this n-tuple with at most one range element.  Note that the range is a &amp;%SetOrClass, and each element of the range is an instance of the &amp;%SetOrClass.

OPENCYC 1: MAY 23, 2002
#$Function-Denotational is the collection of functions the CycL expressions for which can be used to form non-atomic terms (NATs). Specifically, when such a function-denoting expression is appropriately combined with other expressions (i.e. the former is in the 0th argument position and the latter are of the correct number and type) the resulting expression is a new CycL term -- a NAT -- that may then freely appear as a component in other CycL expressions. The NAT will itself denote the value (if any) of the function denoted by the former expression for the sequence of arguments denoted, respectively, by the latter expressions. For example, #$GovernmentFn is a unary denotational function, and so the CycL constant &amp;apos;#$GovernmentFn&amp;apos; requires one (syntactic) argument (such as the constant &amp;apos;#$France&amp;apos;) to form a NAT (in this case, the expression &amp;apos;(#$GovernmentFn #$France)&amp;apos;). This NAT, which denotes the government of France, can in turn serve as a (syntactic) argument in any CycL expression in which (a term for) an instance of #$RegionalGovernment can occur. Alternatively, we could have created a specific new term `GovernmentOfFrance&amp;apos;, asserted that its denotation is an instance of #$RegionalGovernment, and so on. But two related advantages to having NATs in CycL are that they (i) allow for a drastic reduction in the total number of constant terms needed in the CycL vocabulary and (ii) provide a convenient and systematic way to form appropriate new terms as needed out of existing vocabulary (which terms can then inherit from various existing rules and other assertions involving the terms&amp;apos; component expressions). &amp;lt;PARAGRAPH&amp;gt; Important subcollections of #$Function-Denotational include #$IndividualDenotingFunction (whose instances always return instances of #$Individual), #$CollectionDenotingFunction, #$SetDenotingFunction, and #$FunctionDenotingFunction (which is itself a subcollection of the first). NATs formed using terms that denote instances of #$FunctionDenotingFunction often denote instances of #$Function-Denotational themselves. Thus, like most other things, denotational functions can be denoted in CycL either by constants (e.g. &amp;apos;#$GovernmentFn&amp;apos;) or -- although this is less common -- by NATs (e.g. &amp;apos;(#$FunctionToArg 2 #$biologicalMother)&amp;apos;). Note that the collection #$Function-Denotational does _not_ include all functions whatsoever. Functions that, given their natures and the nature of the CycL language, could not sensibly be denoted by any NAT-forming CycL expression are not denotational functions. Examples include certain provably-existing exotic mathematical functions, such as (probably) any one-to-one function from the positive integers to the rational numbers. (For a more general collection that does include such functions, and for a more general explication of the notion of function itself, see #$Function-MathematicalObject and its comment). Note also that #$Function-Denotational does not include any of the so-called #$TruthFunctions (q.v.): #$Predicates, #$Quantifiers, or #$LogicalConnectives. For these relations (as construed in CycL) are not really functions at all, even though it can be heuristically useful to think of them as if they were functions from sequences of arguments to truth values.
</rdfs:comment>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#QuintaryRelation"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A Function with four arguments.</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Microorganism">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Organism-Whole_Cyc__Organism_SUMO_">
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
A specialization of #$BiologicalLivingObject. Each instance of #$Organism-Whole is a biological living object (BLO) that is a whole, and not part of some other BLO. Most instances of #$Organism-Whole are capable of existing and reproducing while physically separate from other organisms (with allowances for eating and mating). Abnormal BLOs which are nonetheless considered to be instances of #$Organism-Whole include instances of #$Virus, as well as sterile hybrids and colony organisms, like those in slime molds or the instances of #$PortugueseManOfWar.

SUMO: Generally, a living individual, including all &amp;%Plants and &amp;%Animals.
</rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Organism-Whole[Cyc]%Organism[SUMO]</rdfs:label>
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="BiologicalLivingObject_Cyc__OrganicObject_SUMO__">
            <rdfs:subClassOf>
              <_SYN-CLASS rdf:ID="ComplexPhysicalObject_has_parts_">
                <rdfs:subClassOf rdf:resource="#PartiallyTangible_Cyc__Object_SUMO__physical-endurant_DOLCE_"/>
                <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                >OPENCYC 1: MAY 23, 2002
Complex physical objects are divisible into (usually well-defined) parts.
</rdfs:comment> <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                >ComplexPhysicalObject[has_parts]</rdfs:label>
                <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
                >32</_LOAD-SEQUENCE>
              </_SYN-CLASS>
            </rdfs:subClassOf>
            <rdfs:subClassOf rdf:resource="#OrganicStuff_Cyc_"/>
            <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >BiologicalLivingObject[Cyc]%OrganicObject[SUMO]*</rdfs:label>
            <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
            >31</_LOAD-SEQUENCE>
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >OPENCYC 1: MAY 23, 2002
The collection of all structures that are composed of one or more living cells (see #$Cell). Biological living objects (or BLO s) might either be instances of #$Organism-Whole (like dogs or pine trees) or components of such whole living organisms (like noses, tails, and pine needles). The healthy leg of a living person is a BLO (as is the person), but an amputated leg is not a BLO. Every instance of #$BiologicalLivingObject is either capable of biological reproduction itself or has components which are capable of biological reproduction (such as the cells in a living arm).

SUMO: This class encompasses &amp;%Organisms, &amp;%CorpuscularObjects that are parts of &amp;%Organisms, i.e. &amp;%BodyParts, and &amp;%CorpuscularObjects that are nonintentionally produced by &amp;%Organisms, e.g. &amp;%ReproductiveBodies.
</rdfs:comment>
          </_SYN-CLASS>
        </rdfs:subClassOf>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >35</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SUMO: An &amp;%Organism that can be seen only with the aid of a microscope.

OPENCYC 1: MAY 23, 2002
A specialization of both #$MicroscopicScaleObject and #$Organism-Whole. Each instance of #$Microorganism is an organism too small to be seen by humans without the aid of a microscope. Notable specializations of #$Microorganism include #$Protozoan, #$Virus, and #$ProkaryoticCell.
</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Moon">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SUMO: &amp;%Moon is the class of &amp;%NaturalSatellites that orbit planets or large asteroids.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Satellite_SUMO"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="ServiceEvent">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Action_Cyc__IntentionalProcess_SUMO__action_DOLCE__Activity_ISO15926__">
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Action[Cyc]%IntentionalProcess[SUMO]]%action[DOLCE]%Activity[ISO15926?]</rdfs:label>
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="Event_Cyc__Process_SUMO__event_DOLCE__ProcessualEntity_SPAN-BFO_">
            <rdfs:subClassOf rdf:resource="#Situation-Temporal_Cyc__perdurant_DOLCE_"/>
            <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >Event[Cyc]%Process[SUMO]%event[DOLCE]%ProcessualEntity[SPAN-BFO]</rdfs:label>
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >COSMO note: note that in some ontologies (and situation logics) , 'Event' is used to refer to a change in state that is considered instantaneous.  In COSMO, such an 'Event' is a subtype of the more general event, which is a change in state that occurs over some interval of time (which may be a zero inerval). 

OPENCYC 1: MAY 23, 2002
An important specialization of #$TemporalThing. Instances of #$Event are events or actions, things that we say are `happening&amp;apos;, or changes in the state of the world. #$Event is also a specialization of #$Intangible, since an event consists of the `actions&amp;apos; per se, and THEY then refer to the tangible objects which participate in them. In contrast, the collection #$SomethingExisting (another important specialization of #$TemporalThing) has instances which have temporal extent yet are `static&amp;apos;, such as a rock at the bottom of a pond. Note: While `#$SomethingExisting vs. #$Event&amp;apos; might seem at first to be an obvious partition of things with temporal extent, there are interesting borderline cases -- such as agreements -- which Cyc treats as instances of #$SomethingExisting, but which could also be represented as instances of #$Event. And there are still other cases, such as the pure disembodied instances of #$TimeInterval, which are instances of #$TemporalThing yet belong neither to #$SomethingExisting nor to #$Event.</rdfs:comment>
            <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
            >45</_LOAD-SEQUENCE>
          </_SYN-CLASS>
        </rdfs:subClassOf>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >46</_LOAD-SEQUENCE>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
The collection of #$Events (q.v.) that are carried out by some doer (see #$doneBy). Instances of #$Action include any event in which one or more actors effect some change in the (tangible or intangible) state of the world, typically by an expenditure of effort or energy. Note that it is not required that any tangible object be moved, changed, produced, or destroyed for an action to occur; the effects of an action might be intangible (such as a change in a bank balance or the intimidation of a subordinate). Note also that the doer of an action, though typically an #$Agent (q.v.), need not be (e.g. a falling rock that dents a car&amp;apos;s roof). Depending upon the context, doers of actions might be animate or inanimate, conscious or nonconscious. For actions that are intentional, see #$PurposefulAction and #$performedBy.

DOLCE: A Perdurant that exemplifies the intentionality of an agent. Could it be aborted, incomplete, mislead, while remaining a (potential) accomplishment ... The point here is that having a result depends on a method, then an action remains an action under incomplete results. As a matter of fact, if we neutralize intentionality, a purely topological, post-hoc view is at odds with the notion of incomplete accomplishments.

SUMO:  A &amp;%Process that has a specific purpose for the &amp;%CognitiveAgent who performs it.
</rdfs:comment>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Product">
        <rdfs:subClassOf rdf:resource="#TemporalThing"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
A collection of temporal things. Instances of #$Product are individual goods, services, investments, etc.-- basically anything that is offered (or may be exchanged) for money or trade. Typically, #$Products are things that are intended to be sold or used for some kind of service in exchange for money at least once in their lifetime. Examples: a Lexus sedan, a package of McDonald&amp;apos;s french fries, a massage, a bouquet of flowers, a share in a money market fund, the services of a real estate agent, a research satellite. See also #$Artifact.</rdfs:comment>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A specialization of #$HelpingAnAgent. Each instance of #$ServiceEvent is an event in which one or more agents (related to the event via the predicate #$providerOfService) do something for one or more other agents (related to the event via the predicate #$recipientOfService). A service event may involve maintenance, repair, or refurbishing of some object belonging to the recipient(s) of the service (including care of his/her person), or it may involve gathering or transmitting information, providing advice, entertainment, transportation, etc. to the recipient(s). Service events may or may not be done for payment.</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="ProductObject">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >ProductObject is an Artifact produced for sale:
SUMO: An &amp;%Artifact that is produced by &amp;%Manufacture and that is intended to be sold.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Product"/>
    <rdfs:subClassOf rdf:resource="#Artifact_Cyc_SUMO_material-artifact_DOLCE"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="TernaryFunction">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="QuaternaryRelation">
        <rdfs:subClassOf rdf:resource="#Relation"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >A relation with four arguments.</rdfs:comment>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >0</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A Function with three arguments and a return value.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Function-Denotational_Cyc__Function_SUMO_"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Plan_SUMO__Plan_DOLCE_">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >116</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >DOLCE: A plan is a method for executing or performing a procedure or a stage of a procedure.A plan must use both at least one role played by an agent, and at least one task.Finally, a plan has a goal as proper part, and can also have regulations and other descriptions as proper parts.

SUMO: A specification of a sequence of &amp;%Processes which is intended to satisfy a specified purpose at some future time.
</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Procedure_SUMO__Method_DOLCE_"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Plan[SUMO]%Plan[DOLCE]</rdfs:label>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="AttributeValue_Cyc__Attribute_SUMO__quale_DOLCE">
    <rdfs:subClassOf rdf:resource="#IntangibleIndividual"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >AttributeValue[Cyc]%Attribute[SUMO]%quality-space[DOLCE–but_disjoint_in_DOLCE]</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO: AttributeValue differs from AttributeType (which see).  AttributeValues are the individual values for attributes of a particular object: the color of a particular car (e.g. red), as distinguished from 
  &amp;&amp;SUMO: Attribute - Qualities which we cannot or choose not to 
reify into subclasses of &amp;%Object.
  COSMO note: Attribute in SUMO is the range for the 'property relation: the documentation of 'property' says: property -- This &amp;%Predicate holds between an instance of &amp;%Entity and an instance of &amp;%Attribute.  (&amp;%property ?ENTITY ?ATTR) means that ?ENTITY has the &amp;%Attribute ?ATTR.
   &amp;&amp; in DOLCE, attribute values are considered to inhere in the objects that possess the qualit; they are individuals and there cannot have subclasses;  therefore each instance of 'quality' is a spatio-temporal-particular.  A closer concept is the DOLCE 'quale', which is an 'abstract region' that contains many qualities.  DOLCE definition of quale: 'An atomic region':  DOLCE definition of 'quality': Qualities can be seen as the basic entities we can  perceive or measure: shapes, colors, sizes, sounds, smells, as well as weights, lengths,  electrical charges... 'Quality' is often used as a synonymous of 'property', but this is  not the case in this upper ontology: qualities are particulars, properties are universals.  Qualities inhere to entities: every entity (including qualities themselves) comes with  certain qualities, which exist as long as the entity exists.  The DOLCE 'qualities' will seldom be used in reasoning, as they are peculiarly inherent in other things and have few relaions with other entities.
    &amp;&amp;  in OpenCyc (ver. 0.7, 2002; not in ver. 0.9) :A specialization of #$IntangibleIndividual. Each instance of #$AttributeValue is a property (in a broad sense of &amp;apos;property&amp;apos;) of some instance of #$Thing. #$AttributeValue includes as instances quantities, such as 5 inches (i.e., (#$Inch 5)) or 1000 dollars per year (i.e., (#$DollarsPerYear 1000)), as well as qualities like #$Hilly, #$Rough, #$DeviceOn, etc., which can be used to make assertions about the state of some tangible object.
</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >86</_LOAD-SEQUENCE>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="SpatialLocation_ISO15926_object-referenced_location__4D_">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO: </rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >124</_LOAD-SEQUENCE>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SpatialLocation[ISO15926:object-referenced_location,_4D]</rdfs:label>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="physical_object_ISO15926_perdurant_objects_extended_in_time__Object4D_COSMO">
        <rdfs:subClassOf rdf:resource="#Entity"/>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >physical_object[ISO15926:perdurant_objects_extended_in_time]%Object4D[COSMO]</rdfs:label>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >COSMO: </rdfs:comment>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >123</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </rdfs:subClassOf>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="SelfConnectedObject_SUMO_">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >20</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A &amp;%SelfConnectedObject is any &amp;%Object that does not consist of two or more disconnected parts.
</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#PartiallyTangible_Cyc__Object_SUMO__physical-endurant_DOLCE_"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SelfConnectedObject[SUMO]</rdfs:label>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="MovementEvent_Cyc__Motion_SUMO_">
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >MovementEvent[Cyc]%Motion[SUMO]</rdfs:label>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >51</_LOAD-SEQUENCE>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="MovementOrShapeChangeEvent_Cyc_">
        <rdfs:subClassOf rdf:resource="#Event_Cyc__Process_SUMO__event_DOLCE__ProcessualEntity_SPAN-BFO_"/>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >MovementOrShapeChangeEvent[Cyc]</rdfs:label>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >50</_LOAD-SEQUENCE>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
A specialization of #$PhysicalEvent whose instances include translational or rotational movements of whole objects (see #$MovementEvent), objects changing shape (see #$ShapeChangeEvent), as well as events in which salient parts of an object move or change shape in relation to the reference frame of the whole object. For example, although a ticking grandfather clock is not normally undergoing either a #$MovementEvent or a #$ShapeChangeEvent, it can still be said to be moving -- and thus undergoing a #$MovementOrShapeChangeEvent -- in virtue of the fact that a salient part of the clock, the pendulum, is swinging. (Of course, the pendulum itself is periodically undergoing #$Movement-Rotation, and the tip of the pendulum is undergoing a #$Movement-TranslationEvent.) As a negative example, a catatonic person should not be thought of as undergoing any #$MovementOrShapeChangeEvent. Although blood moves through such a person&amp;apos;s veins, her lungs expand and contract, and so on, these things would not normally be considered salient enough to entail that the person herself was undergoing a movement or shape change event.
</rdfs:comment>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A specialization of #$GeneralizedTransfer. Each instance of #$MovementEvent is an event in which at least one object translates some distance, or in which at least one object moves from one rotational orientation to another rotational orientation. Each instance of #$MovementEvent is thus a rotation or translation of some object (an instance of #$SomethingExisting), where the movement occurs relative to a frame of reference which is not part of the rotating or translating object. Notable specializations of #$MovementEvent include #$Translocation, #$Rotation-NonPeriodic, and #$Movement-Periodic.

SUMO:  Any &amp;%Process of movement.

</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Person_Cyc__Human_SUMO">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >37</_LOAD-SEQUENCE>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Person[Cyc]%Human[SUMO]*</rdfs:label>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Animal">
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >36</_LOAD-SEQUENCE>
        <rdfs:subClassOf rdf:resource="#Organism-Whole_Cyc__Organism_SUMO_"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
The collection of all animals. This large class of organisms is one instance of #$BiologicalKingdom. Animals are typically motile, living, whole organisms; they are instances of #$Heterotroph, incapable of performing instances of #$Photosynthesis-Generic. Animal cells contain cholesterol and lack cell walls made of cellulose. #$Person is a specialization of #$Animal; see also #$NonPersonAnimal.

SUMO: An &amp;%Organism with eukaryotic &amp;%Cells, and lacking stiff cell walls, plastids, and photosynthetic pigments.
</rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Animal*</rdfs:label>
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="Agent_Cyc__agentive-physical-object_DOLCE_">
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >OPENCYC 1: MAY 23, 2002
The collection of #$Agent-Generics (q.v.) that are not tangible artifacts (cf. #$AgentiveArtifact). #$Agent includes all naturally-occurring agents (e.g. #$Persons and #$Animals), any #$SupernaturalBeings (q.v.), and #$Organizations.

DOLCE:  Within Physical objects, a special place have those to which we ascribe generic intentionality (compatibly to Brentano's distinction, the ability to internally represent a description). These are called Agentive, as opposite to Non-agentive. In general, we assume that agentive objects are constituted by non-agentive objects: an organism is constituted by bodily organs, a robot is constituted by some machinery, and so on. Among non-agentive physical objects we have for example houses, bodily organs, pieces of wood, etc. Generic agentivity is defined here in a wide sense as implying representation or conception (to be characterized in a dedicated - but not developed as yet - ontology of mind). A representation or conception only requires intentionality in Brentano's terms (i.e., the ability to represent something to oneself). See also 'rational physical object'.

</rdfs:comment>
            <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
            >60</_LOAD-SEQUENCE>
            <rdfs:subClassOf rdf:resource="#Agent-Generic_Cyc__Agent_DOLCE__SentientAgent_SUMO_"/>
            <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >Agent[Cyc]%agentive-physical-object[DOLCE]</rdfs:label>
          </_SYN-CLASS>
        </rdfs:subClassOf>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
The collection of all human beings. Something is an instance of #$Person just in case it is a member of the species Homo Sapiens, and thus #$Person is an instance of #$BiologicalSpecies in the #$BiologyMt. Persons are the most intelligent kind of #$Primate, and the only kind known to be naturally capable of speaking a language. #$Person excludes non-human legal persons, who are, however, included in the collection #$LegalAgent.

SUMO: Modern man, the only remaining species of the Homo genus.
</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="SpaceRegion">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO Note: Spaceregion in OpenCyc is not an Object, but pure space. Objects may be located in space.  his region is part our our Space-Time

OPENCYC 1: MAY 23, 2002
A specialization of #$SpatialThing whose instances are regions of space that exclusively act as locations for other spatial objects, and thus are immobile. Instances of #$SpatialThing are said to occupy some region of space. Three dimensional regions of space [#$ChunkOfSpace] can be occupied by solid objects, see the specialization #$ChunkOfSpace-Empirical for the regions of space occupied by physical objects. Purely two-dimensional objects occupy a #$SpaceSurface, see also #$SpaceLine and #$SpacePoint-Empirical for objects of lower dimension. Note that an object of a given dimension cannot truly be located [#$exactlyLocatedAt-Spatial] at a region of space of lower dimension, but only partially or incidentally. For more information on location and occupancy, see #$AbsoluteLocationalPredicate and its instances that relate objects in space and their regions. An important specialization of #$SpaceRegion is #$SpaceRegion-Empirical, whose instances are pieces of the embedding space where spatio-temporal objects are empirically localizable [#$SpatialThing-Localized]. 

Note that SpaceRegion in SUMO is an object viewed as a location.</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >9</_LOAD-SEQUENCE>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SpaceRegion[Cyc]</rdfs:label>
    <rdfs:subClassOf rdf:resource="#spatio-temporal-particular"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Building">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SUMO: The Class of &amp;%StationaryArtifacts which are intended to house &amp;%Humans and their activities.

OPENCYC 1: MAY 23, 2002
A collection of artifacts; a subcollection of #$FixedStructure and of #$HumanShelterConstruction. An instance of #$Building is typically a substantial structure and must have walls and a roof, with rooms inside or at least some area designed to be occupied by humans (but not necessarily as a residence). Examples include the #$EmpireStateBuilding, Michael Jackson&amp;apos;s house in L.A., King Arthur&amp;apos;s castle, an #$AircraftHangar at O&amp;apos;Hare, a #$Lighthouse in the Mediterranean sea, the #$SydneyOperaHouse, the #$WashingtonMonumentInWashingtonDC, etc.
</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#FixedStructure"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="WaterArea">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SUMO: A body which is made up predominantly of water, e.g. rivers, lakes, oceans, etc.</rdfs:comment>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="GeographicalArea_SUMO_Earth_areas_only_subclass_of_region_">
        <rdfs:subClassOf rdf:resource="#GeographicalRegion_Cyc-includes_other_planets_"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >A geographic location, generally having definite boundaries.  Note that this differs from its immediate superclass &amp;%Region in that a &amp;%GeographicArea is a three-dimensional &amp;%Region of the earth.  Accordingly, all astronomical objects other than earth and all one-dimensional and two-dimensional &amp;%Regions are not classed under &amp;%GeographicArea.</rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >GeographicalArea[SUMO–Earth_areas_only:subclass_of_region]</rdfs:label>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >6</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >7</_LOAD-SEQUENCE>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="WaterObject">
        <rdfs:subClassOf rdf:resource="#Substance_SUMO_"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >NOTE: This is a class each instance of which is a physcal object consisting predominantly of water.  The objects may be small - one drop of water - or large - an ocean.

OPENCYC 1: MAY 23, 2002
A collection of tangible things and a subcollection of #$Oxide. Each instance of #$Water is one piece of some portion of the chemical compound H2O. Instances of #$Water may be in a gaseous, liquid, or solid state (see #$stateOfMatter); they may be salty, not salty, drinkable, or not drinkable. Examples include portions of the ocean, such as the #$BayOfBiscay and the #$BayOfBengal (see also #$SeaWater); bodies of fresh water, such as #$NiagaraFalls or the #$GangesRiver; quantities of chlorinated water (see #$PoolWater); and the contents of bottles of tonic water (see #$SeltzerWater). Any portion of liquid that consist mostly of water but differs from it in one or more important properties (e.g. urine, coffee, and lemonade) is not itself an instance of #$Water, but has an instance of #$Water as its main constituent (see #$mainConstituent).</rdfs:comment>
      </_SYN-CLASS>
    </rdfs:subClassOf>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="CityArea">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO Note: in SUMO named 'City'.  Here we make it unambigous that it is the physical part of the Earth that is represented.

A &amp;%LandArea of relatively small size, inhabited by a community of people, and having some sort of political structure. Note that this class includes both large cities and small settlements like towns, villages, hamlets, etc.</rdfs:comment>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="GeopoliticalArea">
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >COSMO Note: a GeopoliticalArea is the physical portion of earth controlled by a Geopolitical agent (country or subdivision).  It is a physical object. It includes all objects on or near the earth's surface, so that an object 'within' a region will be 'in' that area and part of it as well.

Any &amp;%GeographicArea which is associated with some sort of political structure.  This class includes &amp;%Lands, &amp;%Cities, districts of cities, counties, etc.  Note that the identity of a &amp;%GeopoliticalArea may remain constant after a change in borders.
</rdfs:comment>
        <rdfs:subClassOf rdf:resource="#GeographicalArea_SUMO_Earth_areas_only_subclass_of_region_"/>
      </_SYN-CLASS>
    </rdfs:subClassOf>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Graph_SUMO__PointFinitePathSystem_Cyc_different">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="PathSystem">
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >97</_LOAD-SEQUENCE>
        <rdfs:subClassOf rdf:resource="#Entity"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >COSMO: </rdfs:comment>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Graph[SUMO]%PointFinitePathSystem[Cyc–different?]</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO: </rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >98</_LOAD-SEQUENCE>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Length-LongestDimension">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Length">
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="PhysicalAttribute">
            <rdfs:subClassOf>
              <_SYN-CLASS rdf:ID="region_DOLCE_AttributeType">
                <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                >DOLCE: 'region': We distinguish between a quality (e.g., the color  of a specific rose), and its value (e.g., a particular shade of red). The latter  is called quale, and describes the position of an individual quality within a certain  conceptual space (called here quality space) Gardenfors (2000). So when we say that  two roses have (exactly) the same color, we mean that their color qualities, which  are distinct, have the same position in the color space, that is they have the same  color quale.

COSMO note: AttributeType differs from AttributeValue.  The subclasses of AttributeType are broad categories of attributes such as color, length, mass.  The individual values that those attributes may take for particular entities are instances of AtributeValue.</rdfs:comment>
                <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
                >0</_LOAD-SEQUENCE>
                <rdfs:subClassOf rdf:resource="#Entity"/>
              </_SYN-CLASS>
            </rdfs:subClassOf>
          </_SYN-CLASS>
        </rdfs:subClassOf>
      </_SYN-CLASS>
    </rdfs:subClassOf>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Location-generic">
    <rdfs:subClassOf rdf:resource="#Context"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A Location-generic is the Type representing the most general notion of location, which can be abstract or concrete, a region of space, a pont in space, or an Object.</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="SymmetricRelation">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A relation true in both directions.</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#Relation"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="PathForWheeledVehicles_Cyc__LandTransitway_SUMO">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A specialization of #$PathArtifact. Each instance of #$PathForWheeledVehicles is an artifact whose primary function is to serve as a path along which wheeled vehicles may move or park. Often such paths are paved, but they need not be. Specializations of #$PathForWheeledVehicles include #$AirplaneRunway, #$ParkingLot, and #$Roadway.

The SUMO LandTransitway is close but not identical, as it includes airports and airport runways - the latter arguably for wheeled vehicles, but the former less clearly so; in Opencyc Airport is a FixedStructure.
&amp;%LandTransitway is the subclass of &amp;%Transitway that represents areas intended for motion over the ground.</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >103</_LOAD-SEQUENCE>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="PathArtifact">
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >102</_LOAD-SEQUENCE>
        <rdfs:subClassOf rdf:resource="#Path-Customary"/>
        <rdfs:subClassOf rdf:resource="#Artifact_Cyc_SUMO_material-artifact_DOLCE"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
A specialization of both #$ConstructionArtifact and #$Path-Customary. Each instance of #$PathArtifact is a spatial path made by humans or animals. Instances of #$PathArtifact include #$ErieCanal, #$WellandShipCanal, #$ChampsElysee, #$WallStreet, USHighway80, and #$Highway101CA. Note that each of these artifacts is a single, particular path; to refer to a whole system of #$PathArtifacts, use #$PathArtifactSystem.
</rdfs:comment>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >PathForWheeledVehicles[Cyc]%LandTransitway[SUMO]</rdfs:label>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="MassMeasure">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="ConstantQuantity_SUMO_measures_">
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >84</_LOAD-SEQUENCE>
        <rdfs:subClassOf rdf:resource="#ScalarInterval"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >COSMO: </rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >ConstantQuantity[SUMO–measures]</rdfs:label>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="PhysicalQuantity">
        <rdfs:subClassOf rdf:resource="#ScalarInterval"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
A specialization of #$ScalarInterval. Each #$PhysicalQuantity is #$ScalarInterval that can measure a physical aspect of some instance of #$TemporalThing. Specializations include #$Time-Quantity, #$Mass, and #$Area.</rdfs:comment>
        <rdfs:subClassOf rdf:resource="#Quantity"/>
      </_SYN-CLASS>
    </rdfs:subClassOf>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="TransportationEvent_Cyc__Transportation_SUMO_">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >53</_LOAD-SEQUENCE>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Translocation">
        <rdfs:subClassOf rdf:resource="#MovementEvent_Cyc__Motion_SUMO_"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
A subcollection of #$MovementEvent. Each instance of #$Translocation is a movement of something across a distance; thus there is both a location that it is a movement from (see #$fromLocation) and a location that it is a movement to (see #$toLocation). (These two locations might or might not be distinct, considering round-trips.) Two important subcollections of #$Translocation are #$Movement-TranslationEvent and #$WavePropagation (qq.v.).

SUMO:  &amp;%Translocation is that class of &amp;%Motions in which an object moves from one place to another.  In the case of round trips, the &amp;%origin and &amp;%destination are the same, but the intervening motion passes through other locations.  &amp;%Translocation represents linear motion, in contrast to rotation or other movement in place.  A vehicle is not necessary; &amp;%Ambulating is a kind of &amp;%Translocation.</rdfs:comment>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >52</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A collection of events in which one or more objects transports one or more other objects; a subcollection of both #$Conveying-Generic and #$Translation-Complete. An instance of #$TransportationEvent is an event in which an object (in the role of #$transporter) aids in the translational movement of another object (having the role of #$transportees), so that both objects move together along the same complete pathway (see #$motionPathway-Complete). Optionally, one of these objects, or some third object moving along with them, provides the force to make the movement happen (see #$providerOfMotiveForce). Examples of transportation events include automobile transportation, riding a bicycle, dogs pulling goods on a sled, a wagon with groceries rolling down a hill, a person carrying clothes in a suitcase, etc. In that last case, note that the #$transporter is the suitcase, not the person. Things which are _not_ #$TransportationEvents include a river conveying some flotsam, the wind blowing a leaf, a conveyor belt moving a widget to the next person on the assembly line, or a walking beast of burden that is carrying nothing. The first three of these negative examples are instances of #$Conveying-Stationary, since the would-be #$transporter doesn&amp;apos;t actually change its overall location (see #$conveyor-Stationary); in the fourth case the unburdened beast has no #$transportees.

SUMO:  &amp;%Motion from one point to another by means of a &amp;%TransportationDevice.
</rdfs:comment>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >TransportationEvent[Cyc]%Transportation[SUMO]</rdfs:label>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="BodyCavity">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="CavityOrContainer">
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
The collection of all cavities, containers, and hollow objects. An instance of #$CavityOrContainer spatially subsumes a hollow space region, and might include as #$physicalParts either no enclosing walls (#$CavityInteriorRegion), just the inside surface of the walls (#$CavityWithWalls), or the complete walls (#$ContainerShapedObject). #$Containers, such as coffee cups, buildings or stomachs, have well-defined outside walls. Instances of #$Cavity such as caves and rooms do not have well-defined outside walls. #$CavityOrContainer was reified since certain properties hold true of both instances of #$Container and of #$Cavity, and since we wish to use certain predicates interchangeably. For example, we wish to use the same predicate, #$pipeEndsAtCavity for talking about relationships holding between esophagi and stomachs in addition to that which holds between hallways and rooms.</rdfs:comment>
        <rdfs:subClassOf rdf:resource="#SpatialThing-Localized"/>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:subClassOf rdf:resource="#feature_DOLCE_parasitic_on_objects__parent_TwoOrHigherDimensionalThing_"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Any enclosed space inside an animal that can contain fluid (gas or liquid).</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Plant">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
#$Plant is the collection of all plants; it is a member of the #$BiologicalKingdom and contains the primary subjects of #$Biology. Plants are typically stationary, living, whole organisms; the cells of plants generally lack cholesterol and have cell walls that include substances of #$Cellulose. Most, though not all, plants are capable of making sugars by #$Photosynthesis-Plant processes and have green parts. Some example subsets of #$Plant are the collections #$RoseBush, #$SpruceTree, and #$Moss.

SUMO: An &amp;%Organism having cellulose cell walls, growing by synthesis of &amp;%Substances, generally distinguished by the presence of chlorophyll, and lacking the power of locomotion.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#VegetableMatter"/>
    <rdfs:subClassOf rdf:resource="#Organism-Whole_Cyc__Organism_SUMO_"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="HeavenlyBody">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >40</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#AstronomicalObject"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A specialization of #$AstronomicalObject. Each instance of #$HeavenlyBody is an astronomical object located in outer space (including the Earth). Instances of #$HeavenlyBody are natural bodies, _not_ artificially made objects such as spaceships or communications satellites. Specializations of #$HeavenlyBody include #$Planet and #$Star.
</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="grammar_DOLCE_">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >71</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >DOLCE: A set of rules for the generation of a (closed or open set of) information objects.</rdfs:comment>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >grammar[DOLCE]</rdfs:label>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Information-encoding-system_DOLCE__">
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >DOLCE:  An information encoding system is a description that involves information objects. They can be divided into 1) axiomatic systems, which provide roles and operations to define formal descriptions (e.g. theories), 2) combinatorial systems, which provide roles and operations to create valid information objects (e.g. grammars), 3) classification systems, which are contexts of (ev. ordered) lists of information objects, and 4) informal encoding systems, which provide roles and operations to define informal descriptions (e.g. narratives).
</rdfs:comment>
        <rdfs:subClassOf rdf:resource="#description_DOLCE-D_S__MentalObject_COSMO_suggested__"/>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >70</_LOAD-SEQUENCE>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Information-encoding-system[DOLCE]*</rdfs:label>
      </_SYN-CLASS>
    </rdfs:subClassOf>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Integer">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="RationalNumber">
        <rdfs:subClassOf rdf:resource="#RealNumber"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >COSMO Note: RationalNumber includes the integers.

SUMO: Any &amp;%RealNumber that is the product of dividing two &amp;%Integers.

OPENCYC 1: MAY 23, 2002
A specialization of #$RealNumber. A number NUM is an instance of #$RationalNumber just in case NUM can be expressed as the quotient of two integers. For example, 3/4, 2 1/8, 0.3333333..., 11/5.
</rdfs:comment>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SUMO:  A negative or nonnegative whole number.

OPENCYC 1: MAY 23, 2002
The collection of all whole numbers; a subcollection of #$RationalNumber. Each instance of #$Integer is a whole number, resolvable into units with no fractional remainder. An integer may be positive (e.g., 42), zero, or negative (e.g., -42). Note that 42.0 is a floating-point real number which is close to the integer 42 within the tolerance of the floating-point representation but is not necessarily equal to the integer 42. Therefore, 42.0 is not an instance of #$Integer.
</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Roadway">
    <rdfs:subClassOf rdf:resource="#GeographicalRegion_Cyc-includes_other_planets_"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A specialization of #$PathForWheeledVehicles. Each instance of #$Roadway is a path artifact designed to accomodate road vehicles (see the collection #$RoadVehicle) such as cars, trucks, and motorcycles. Specializations of #$Roadway include #$Street-Generic and #$Highway.

SUMO: &amp;%Roadway is the subclass of &amp;%LandTransitways that are areas intended for surface travel by self-powered, wheeled vehicles, excluding those that travel on tracks.  &amp;%Roadways have been at least minimally improved to enable the passage of vehicles. &amp;%Roadways include dirt and gravelled roads, paved streets, and expressways.
</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >104</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#PathForWheeledVehicles_Cyc__LandTransitway_SUMO"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Language_Cyc_abstract__in_SUMO_physical__DOLCE-see_description__">
    <rdfs:subClassOf rdf:resource="#CommunicationConvention_Cyc__"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Language[Cyc–abstract;_in_SUMO–physical;_DOLCE-see_description]#</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
The collection of systems which use conventionalized signs or symbols. This includes dead languages, computer languages, unspoken languages, codes - anything which relates symbols to meaning.</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >78</_LOAD-SEQUENCE>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="DeadAnimal">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A specialization of #$OrganicStuff (and not, of course, of #$Animal, whose instances must be alive). Each instance of #$DeadAnimal is a corpse or partial remains of an individual animal, somewhat intact, and prior to any butchering, burning, cooking, dissolving, or fully decomposing.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#OrganicStuff_Cyc_"/>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >28</_LOAD-SEQUENCE>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Church">
    <rdfs:subClassOf rdf:resource="#Building"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A building used for religious ceremonies.</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Railway">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >105</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
The collection of all pathways made of RailroadTracks and used for train transportation. It includes main lines and sidings.

&amp;%Railway is the subclass of &amp;%LandTransitways that have rails along which &amp;%Trains may travel. A railway consists of the rail bed, sleepers, tracks, electric rails, switches, sensors, lights, crossing grades, and any other integral machinery or parts of a section of railway.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#PathForWheeledVehicles_Cyc__LandTransitway_SUMO"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Color">
    <rdfs:subClassOf rdf:resource="#PhysicalAttribute"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="PhysicalDevice">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A specialization of both #$Artifact and #$SolidTangibleProduct. Each instance of #$PhysicalDevice is an artifact with a relatively rigid, set shape, designed for a specific use or to perform a specific function. Specializations of #$PhysicalDevice thus include (among others) #$RoadVehicle, #$Motorboat, #$HandTool, and #$PlumbingFixture. Note that artifacts which can only be &amp;apos;used&amp;apos; in a very loose or metaphorical sense, such as instances of #$Sculpture, #$FlowerBed, or #$Advertisement-IBT, are _not_ instances of #$PhysicalDevice. Moreover, artifacts which have a specific use or function, but which do not have a relatively rigid, set shape are _not_ instances of #$PhysicalDevice; for this reason, neither #$GasolineFuel nor #$AntiFreeze are specializations of #$PhysicalDevice.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#ProductObject"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Group_Cyc__may_have_intangibles_">
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Group[Cyc:_may_have_intangibles]</rdfs:label>
    <rdfs:subClassOf rdf:resource="#TemporalThing"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >NOTE: in COSMO, Group is restricted to groupings of at least two entities, though in OpenCyc a 'grou' may have one.  In this manner we say closer to the linguistic intuition of a plural.  A more generc Group that is not a TemporalThing could be defined, but is left out at this point.

OPENCYC 1: MAY 23, 2002
A collection of temporal objects. Each instance of #$Group is a composite object made up of one or more individual objects or events. A group is related to each of its members by the predicate #$groupMembers (q.v.). Note that instances of #$Group are _not_ collections. A group has temporal extent and might have spatial location, while a collection is timeless and nonspatial. It is of course possible to define a collection parallel to any given group, so that the instances of the collection are exactly the group-members of that group; e.g. each toe on my left foot (and nothing else) is both an instance of the collection of my left toes and a member of the group of toes on my left foot. But that group (of my left toes) is a spatiotemporal thing while the correlated collection (of my left toes) is not. Similarly, if a certain flock of pigeons is considered as having a location, a spatial extent, and a time of existence, then the flock is being considered a _group_ and not a collection. Finally, unlike a collection, a group cannot be empty, but must have _at_least_one_ group-member. As a default, a group whose group-members all are instances of #$SomethingExisting is itself an instance of #$SomethingExisting, and a group whose group-members all are #$Events is itself an #$Event. Instances of #$Group include #$QueensGuard, #$ThreeWiseMen, #$SantasReindeer, and #$InternationalCommunity.
</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >54</_LOAD-SEQUENCE>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="GenericSubstance">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >122</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >List name: GenericSubstance_COSMO-added__not_an_object__includes_chemicals_
COSMO:  GenericSubstance is an abstract notion of Substance as the stuff of which objects are composed.  It is not an object, even though 'Substance' in OpenCyc and SUMO are actually objects of a particular composition.  Rather, it is a concept that is analogous to the derivative of an object with respect to volume, i.e. it acts like an abstract density (of some substance type).  For COSMO version 0.01 (COSMOtopOWL03: 2006-01-01) the required axioms for a proper definition have not been added.  For more discussion see: http://colab.cim3.net/file/work/SICoP/ontac/reference/DimensionsOfProcessAndEvent.doc
</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Entity"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >GenericSubstance[COSMO-added:_not_an_object,_includes_chemicals]</rdfs:label>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="DistanceMeasure">
    <rdfs:subClassOf rdf:resource="#PhysicalQuantity"/>
    <rdfs:subClassOf rdf:resource="#ConstantQuantity_SUMO_measures_"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >distance, width, length, height, girth, all in the same units.</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Planet">
    <rdfs:subClassOf rdf:resource="#Satellite_SUMO"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >&amp;%Planet is the class of large &amp;%NaturalSatellites that revolve around a star.
</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >42</_LOAD-SEQUENCE>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Pipe">
    <rdfs:subClassOf rdf:resource="#PathArtifact"/>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="Pipe-GenericConduit">
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >OPENCYC 1: MAY 23, 2002
The collection of all enclosed tubular fluid conduits with openings at both ends. #$Pipe-GenericConduit encompasses both human-made pipes as well as natural pipes, found naturally occurring in the environment, or found in an organism&amp;apos;s body, like #$BloodVessels.</rdfs:comment>
        <rdfs:subClassOf>
          <_SYN-CLASS rdf:ID="FluidConduit">
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >OPENCYC 1: MAY 23, 2002
The collection of all conduits, natural or artifactual, through which fluid (instances of #$FluidTangibleThing) can flow in #$FluidFlowEvents.</rdfs:comment>
            <rdfs:subClassOf rdf:resource="#CavityOrContainer"/>
          </_SYN-CLASS>
        </rdfs:subClassOf>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Any kind of pipe-like  artifact - plastic, glass, steel.  Laboratory glass tubing qualifies as a 'pipe'.</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="SimplePipe">
    <rdfs:subClassOf rdf:resource="#Pipe"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >TopLevel04: A pipe that is manufactured as a single object, which may be connected to or welded to anoother object but retins its identity as a SimplePipe .</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Text_SUMO_physical_not_abstract__">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A &amp;%LinguisticExpression or set of &amp;%LinguisticExpressions that perform a specific function related to &amp;%Communication, e.g. express a discourse about a particular topic, and that are inscribed in a &amp;%CorpuscularObject by &amp;%Humans.
</rdfs:comment>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Text[SUMO–physical_not_abstract]#</rdfs:label>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >26</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#LinguisticExpression_SUMO_only_"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="CD-Physical">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >An instance of a Compact Disk, the physical object, not the informational content.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#InformationBearingObject_Cyc_ContentBearingObject_SUMO"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Language_DOLCE-D_S_differs_from_Cyc_and_SUMO___">
    <rdfs:subClassOf rdf:resource="#description_DOLCE-D_S__MentalObject_COSMO_suggested__"/>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >69</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >See Language elsewhere.</rdfs:comment>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Language[DOLCE-D&amp;S:differs_from_Cyc_and_SUMO]#*</rdfs:label>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="CountryArea">
    <rdfs:subClassOf rdf:resource="#GeopoliticalArea"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO Note: in SUMO named 'Nation'.  Here we make it unambigous that it is the physical part of the Earth that is represented.

SUMO: Nation: The physical area, not the organization
The broadest &amp;%GeopoliticalArea, i.e. &amp;%Nations are &amp;%GeopoliticalAreas that are not part of any other overarching and comprehensive governance structure (excepting commonwealths and other sorts of loose international organizations).</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Reservation">
    <rdfs:subClassOf rdf:resource="#Agreement_Cyc_"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Any kind of reservation, where one agent agrees to reserve something for another agent - airline seats, hotel rooms, merchandise.</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="BinaryFunction">
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="TernaryRelation">
        <rdfs:subClassOf rdf:resource="#Relation"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >A relation with three arguments.</rdfs:comment>
        <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >0</_LOAD-SEQUENCE>
      </_SYN-CLASS>
    </rdfs:subClassOf>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A funciton with two arguments and a return value.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Function-Denotational_Cyc__Function_SUMO_"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="TimePoint">
    <rdfs:subClassOf rdf:resource="#IntangibleIndividual"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A Point in time, measured by some clock (by default the NIST set of atomic clocks).  This is not identical to a zero-length time interval, though every TimePoint is located at the same time as some zero-length time interval, and vice-versa.  This differs from Opencyc where a TimePoint is identical to a zero-length TimeInterval</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#TemporalThing"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="BodyOfWater">
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >BodyOfWater*</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SUMO; A &amp;%BodyOfWater is a connected body of water with established boundaries marked by either geographical features or conventional borders.

OPENCYC 1: MAY 23, 2002
A collection of topographical features. Each instance of #$BodyOfWater is a natural or artificial body of water. Instances may belong to specializations as #$Lake, #$Stream, and #$Ocean. #$BodyOfWater includes #$Reservoirs, #$Canals, and navigation channels that are developed and/or enlarged by humans. However, it does not include smaller purely-artificial bodies of water such as #$SwimmingPools or tanks of water. #$Glaciers and snowpacks are not included, but lakes and ponds that are sometimes liquid are included, even if they have an ice crust or are solidly frozen. Examples of #$BodyOfWater: #$HudsonBay, #$PanamaCanal, #$AdriaticSea, #$BayOfBengal, #$NiagaraFalls.
</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >8</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#SelfConnectedObject_SUMO_"/>
    <rdfs:subClassOf rdf:resource="#WaterArea"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Process_PSL">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A PSL Process is here represented as a procedure with discrete steps, whose realization is an action.

The ricj formalization of PSL is not yet added in.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Procedure_SUMO__Method_DOLCE_"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="DensityMeasure">
    <rdfs:subClassOf rdf:resource="#ConstantQuantity_SUMO_measures_"/>
    <rdfs:subClassOf rdf:resource="#PhysicalQuantity"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >mass per unit volume</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="SingleValuedRelation">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#Relation"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A SingleValuedRelation is one that has only one instance og the last argument for each set of other arguments.  In some terminologies (as in Cyc) it is "functional" in that argument.</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Multigraph">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO: </rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >99</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#Graph_SUMO__PointFinitePathSystem_Cyc_different"/>
  </_SYN-CLASS>
  <SchoolGrounds rdf:ID="TrinityCollegeCampus">
    <isaPhysicalPartOf>
      <CityArea rdf:ID="DublinIreland">
        <isaPhysicalPartOf rdf:resource="#IrelandTerritory"/>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >DublinIreland is the physical piece of earth controlled by the city of Dublin in Ireland.</rdfs:comment>
      </CityArea>
    </isaPhysicalPartOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The physical grounds of Trinity college in Dublin, Ireland.</rdfs:comment>
  </SchoolGrounds>
  <_SYN-CLASS rdf:ID="Water">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Water – the substance is not an object, but the semi-abstract substance of which each WaterObject is constituted.  it has conceptual dimensions of density (e.g. grams per cc).</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#GenericSubstance"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="VariableArityRelation">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A relation which can have more than one specified number of arguments.</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#Relation"/>
  </_SYN-CLASS>
  <BinaryFunction rdf:ID="Measurefn">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SUMO function to craete measures: This &amp;%BinaryFunction maps a &amp;%RealNumber and 
a &amp;%UnitOfMeasure to that &amp;%Number of units.  It is used for expressing &amp;%ConstantQuantities.  For example, the concept of three meters is represented as (&amp;%MeasureFn 3 &amp;%Meter).
</rdfs:comment>
  </BinaryFunction>
  <_SYN-CLASS rdf:ID="SpaceRegion_SUMO_for_regions_off_the_Earth_subclass_of_Object">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >10</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#SpatialThing-Localized"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO: </rdfs:comment>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SpaceRegion[SUMO:for_regions_off_the_Earth–subclass_of_Object[!?]]</rdfs:label>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="NonNegativeInteger">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SUMO: An &amp;%Integer that is greater than or equal to zero.

OPENCYC 1: MAY 23, 2002
#$NonNegativeInteger is the sub-collection of #$Integer that excludes the negative integers. Each instance of #$NonNegativeInteger is a whole number greater than or equal to zero -- for example, 0, 1, 2, 3, ....
</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Integer"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Ocean">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SUMO: &amp;%Ocean is the class containing the oceans that are the major subdivisions of the &amp;%WorldOcean.  According to the International Hydrographic Association, there are five oceans: the &amp;%AtlanticOcean, &amp;%PacificOcean, &amp;%IndianOcean, &amp;%SouthernOcean, and &amp;%ArcticOcean.  Note: The largest oceans, the Atlantic and Pacific, are subdivided into Northern and Southern regions, but those regions are not separate &amp;%Oceans.

OPENCYC 1: MAY 23, 2002
A collection of topographical features. Each instance of #$Ocean is one of the oceans of the world. This includes #$TheOceanSea, the interconnected expanse of salt water covering 71% of the Earth&amp;apos;s surface, and of which the other oceans are subregions. Examples: #$AtlanticOcean, #$ArcticOcean, #$IndianOcean, #$PacificOcean.</rdfs:comment>
    <rdfs:subClassOf>
      <_SYN-CLASS rdf:ID="SaltWaterArea">
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >SUMO: A &amp;%WaterArea whose &amp;%Water is saline, e.g. oceans and seas.
OpenCyc: SeaWater: OPENCYC 1: MAY 23, 2002
A specialization of both #$LiquidTangibleThing and #$Water-Saline. Each instance of #$SeaWater is a portion of salt water with the kind of mineral concentrations found in oceans (see the collection #$Ocean) --including the oceans themselves.</rdfs:comment>
        <rdfs:subClassOf rdf:resource="#WaterArea"/>
      </_SYN-CLASS>
    </rdfs:subClassOf>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Process_DOLCE">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Within stative occurrences, we distinguish between states and processes     according to homeomericity: sitting is classified as a state but running     is classified as a process, since there are (very short) temporal parts of     a running that are not themselves runnings. In general, processes differ     from situations because they are not assumed to have a description from     which they depend. They can be sequenced by some course, but they do not     require a description as a unifying criterion. On the other hand, at any     time, one can conceive a description that asserts the constraints by which     a process of a certian type is such, and in this case, it becomes a     situation. Since the decision of designing an explicit description that     unifies a perdurant depends on context, task, interest, application, etc.,     when aligning an ontology do DLP, there can be indecision on where to     align a process-oriented class. For example, in the WordNet alignment, we     have decided to put only some physical processes under 'process', e.g.     'organic process', in order to stress the social orientedness of DLP. But     whereas we need to talk explicitly of the criteria by which we conceive     organic processes, these will be put under 'situation'. Similar     considerations are made for the other types of perdurants in DOLCE. A     different notion of event (dealing with change) is currently investigated     for further developments: being 'achievement', 'accomplishment', 'state',     'event', etc. can be also considered 'aspects' of processes or of parts of     them. For example, the same process 'rock erosion in the Sinni valley' can     be conceptualized as an accomplishment (what has brought the current state     that e.g. we are trying to explain), as an achievement (the erosion     process as the result of a previous accomplishment), as a state (if we     collapse the time interval of the erosion into a time point), or as an     event (what has changed our focus from a state to another). In the erosion     case, we could have good motivations to shift from one aspect to another:     a) causation focus, b) effectual focus, c) condensation d) transition     (causality). If we want to consider all the aspects of a process together,     we need to postulate a unifying descriptive set of criteria (i.e. a     'description'), according to which that process is circumstantiated in a     'situation'. The different aspects will arise as a parts of a same situation.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#stative_DOLCE"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="ComputerProgram_SUMO__ProgramSpecification_Cyc_">
    <rdfs:subClassOf rdf:resource="#Procedure_SUMO__Method_DOLCE_"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The intended SUMO and Cyc meanings may not be identical.  OpenCyc #$SoftwareObject-Individual may be closer to an actual program.

SUMO: A set of instructions in a computer programming language that can be executed by a computer.

OPENCYC 1: MAY 23, 2002:  A black-box characterization of (some aspects of) how a program should behave. For instance a sorting program can be specified by requiring that the output be a list of the same elements as the input such that no element follows a greater element. A #$ProgrammingLanguageImplementation can be specified by the #$AbstractProgrammingLanguage it implements.</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >117</_LOAD-SEQUENCE>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >ComputerProgram[SUMO]%ProgramSpecification[Cyc]</rdfs:label>
  </_SYN-CLASS>
  <Building rdf:ID="TheOldLibraryAtTrinityCollege">
    <isaPhysicalPartOf rdf:resource="#TrinityCollegeCampus"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A specific library building on the canpus of Trinity College in Dublin, Ireland.  Known as the resting place of  the 9th-century Book of Kells.</rdfs:comment>
  </Building>
  <_SYN-CLASS rdf:ID="PartialValuedRelation">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#Relation"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A PartialValuedRelation is one for which there may be cases where some set of argument other than the last do not necessarily imply that an instance of the last argument exists which satisfieds that relation.</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="PhoneNumber">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A collection of strings. Each instance of #$PhoneNumber is a string that represents a telephone number.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#IDString"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Food">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO Note: OpenCyc food is eaten by animals, therefore nutrients assimilated by microorganismas or plants are not in this category.

OPENCYC 1: MAY 23, 2002
An instance of #$ExistingStuffType, and a specialization of #$FoodAndDrink. Each instance of #$Food is a particular portion of food of a type which can, and habitually is, eaten by humans or other animals. Here the notion of _eating_ is important; eating an instance of #$Food will generally require biting and chewing, so that edible stuff normally taken in via drinking, inhalation, or osmosis is excluded from this collection. A borderline example is a bowl of Jello; a borderline non-example is a very thick milkshake. Instances of #$Food provide calories and/or nutrients that humans or animals need.
</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >30</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#OrganicStuff_Cyc_"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="InstantaneousEvent_COSMO__Event_ISO15926_">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COSMO note:  An InstantaneousEvent is a change that occurs instantaneously - the change can be said to occur at one point in time, and at any point prior to that, the state is different.  For physical events, this is unrealistic but can be a useful abstraction.  Certain social or mental events can be sid to be instantaneous, such as a change in title or position that is scheduled ahead of time.
  In ISO15926 and some situation calculus representations, processes are simply a series of instantaneous changes followed by periods ('State') of no change.  So this is an important concept for some process representations.</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >49</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#Event_Cyc__Process_SUMO__event_DOLCE__ProcessualEntity_SPAN-BFO_"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >InstantaneousEvent[COSMO]%Event[ISO15926]</rdfs:label>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Mass">
    <rdfs:subClassOf rdf:resource="#PhysicalAttribute"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="InformationTransferPhysicalEvent_Cyc__Communication_SUMO__communication-event_DOLCE__">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A specialization of #$InformationTransferEvent (q.v.) and #$PhysicalEvent each instance of which involves at least one #$PartiallyTangible, either as its source (see #$informationOrigin), as (at least one of) its destination(s) (see #$informationDestination), or both. (A partially tangible source or destination, note, must pre-exist the transfer event.) Indeed, most if not all actual information transfer events are physical events; but #$InformationTransferPhysicalEvent does in principle exclude those such as telepathic communications between disembodied spirits or other #$Agent-Intangibles.</rdfs:comment>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >InformationTransferPhysicalEvent[Cyc]%Communication[SUMO]%communication-event[DOLCE]#</rdfs:label>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >48</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#Event_Cyc__Process_SUMO__event_DOLCE__ProcessualEntity_SPAN-BFO_"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="phenomenon_DOLCE_no_actor_involved_">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >47</_LOAD-SEQUENCE>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >phenomenon[DOLCE–no_actor_involved]</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A phenomenon is basically a process that does not include any intentional active participation. Therefore, it cannot be sequenced by a task.It can be seen as an accomplishment when some intentionality puts boundaries on it (although it is not claimed to be inherently intentional). On the other hand, a purely physical phenomenon does not seem to have inherent boundaries either ... and also for biological processes as well as economic processes this seems to be disputable. If the boundary hypothesis is discarded, phenomenon should migrate under process.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Event_Cyc__Process_SUMO__event_DOLCE__ProcessualEntity_SPAN-BFO_"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Collection_SUMO__tangibles_only__no_identical_Cyc_class_">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >55</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#Group_Cyc__may_have_intangibles_"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Collection[SUMO:_tangibles_only,_no_identical_Cyc_class]</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Collections have &amp;%members like &amp;%Classes, but, unlike &amp;%Classes, they have a position in space-time and &amp;%members can be added and subtracted without thereby changing the identity of the &amp;%Collection.  Some examples are toolkits, football teams, and flocks of sheep.</rdfs:comment>
  </_SYN-CLASS>
  <Pipeline_SUMO rdf:ID="TheTransAlaskaPipeline">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The pipeline which carries oil from Alaska's North Slope to Valdez.</rdfs:comment>
  </Pipeline_SUMO>
  <_SYN-CLASS rdf:ID="ConceptualWork_Cyc_">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >109</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#Information-Content"/>
    <rdfs:subClassOf rdf:resource="#Artifact-Intangible"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >ConceptualWork[Cyc]</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
The collection of abstract works which are the deliberate creations of one or more individuals working in concert, have instantiations [#$instantiationOfCW] which are #$InformationBearingThings, and associated #$AbstractInformationStructures. This is a specialization of #$DevisedPracticeOrWork [q.v.]. For works with propositional content see the more specific collection, #$PropositionalConceptualWork (PCW). Positive examples include: #$MobyDickNovel (as opposed to any instances of #$BookCopy such that (#$instantiationOfCW #$MobyDickNovel BOOK_COPY)), Beethoven&amp;apos;s 9th Symphony (as opposed to any performance of this symphony or any copy of its score). Negative examples include: games (performances are not IBTs), awards (they do not have associated #$AbstractInformationStructures), paintings (not abstract), customs (not deliberate creations), natural languages (not a deliberate creation), and codes (their uses, not instantiations, are IBTs).
</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="SchoolGrounds">
    <rdfs:subClassOf rdf:resource="#GeographicalArea_SUMO_Earth_areas_only_subclass_of_region_"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SchoolGrounds is the physical region that comprises the property used by a a school (at any level, including university campuses).  Because it is a geographicla area, It includes the buildings and other structures as well as whatever happens to be located in that area at any time, including people.</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="AnatomicalVessel">
    <rdfs:subClassOf rdf:resource="#Pipe-GenericConduit"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
The collection of all enclosed tubular fluid conduits with openings at both ends. #$Pipe-GenericConduit encompasses both human-made pipes as well as natural pipes, found naturally occurring in the environment, or found in an organism&amp;apos;s body, like #$BloodVessels.</rdfs:comment>
  </_SYN-CLASS>
  <Book-Physical rdf:ID="TheBookOfKells">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The Book of Kells 
A famous illuminated ancient book, usually exhibited at the Trinity College library in Dublin, Ireland.

The Book of Kells is not simply a religious manuscript. True, it contains the four gospels of Mark, Mathew, Luke and John and that was the sole original purpose of the book. But its age and its design, although damaged, allow us a glorious glimpse into the art and style of ancient Ireland. The book is, quite simply, considered a crowning glory of the Celtic art form, and possibly one of the most important treasures of Western Europe.

The history of the Book of Kells stretches back more than 1500 years to the 6th century AD. Some claim that none other than St. Columba himself had a hand in its production, but most ascribe it to others that followed in his footsteps. The book was the work of at least two distinguishable hands according to experts who place its origin slightly later than the life of St. Columba.

Map of the Isle of Iona, Click for Larger ImageExperts are uncertain where the Book of Kells was first begun, but evidence points to the Isle of Iona, which was the center of St. Columba's influence and the home of his church. Later, during the Viking raids of the 9th century, it was moved for its protection to Kells Monastery, County Meath, Ireland. Here it remained for almost two hundred years, until it was stolen in 1007. Its golden cover, which was probably encrusted with gems, was ripped from the book, and the remainder was thrown in a ditch. The book was soon recovered, but not before it received some water damage to the front and back pages. Unfortunately, its cover was forever lost. </rdfs:comment>
    <isLocatedAt rdf:resource="#TheOldLibraryAtTrinityCollege"/>
  </Book-Physical>
  <_SYN-CLASS rdf:ID="AnimalBLO_Cyc_includes_animal_parts_">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
The specialization of #$BiologicalLivingObject which includes all the instances of #$Animal and of #$AnimalBodyPart and #$AnimalBodyRegion.
</rdfs:comment>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >34</_LOAD-SEQUENCE>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >AnimalBLO[Cyc:includes_animal_parts]</rdfs:label>
    <rdfs:subClassOf rdf:resource="#BiologicalLivingObject_Cyc__OrganicObject_SUMO__"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="UnaryFunction">
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >0</_LOAD-SEQUENCE>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A Function with one argument.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#BinaryRelation"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="WebServiceEvent">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A WebServiceEvent is a service that is executed by a computer using Web connections between requester and executing conputer.  The 'Provider' will typically be an organization or person, and is distinct from the computer used to execute the service.
  As a Product, a  WebServiceEvent has to have a The 'maker/manufacurer/creator'.  Thisiwill be the agent that set up the commoputer to provide the service, whether or not it is for profit.  We do not expect computers to providing serives on their own volition; an artifact has to be made by a CognitiveAgent.  If at some point certain computers come to be classified as CognitiveAgents, they it may be possible for them to provide services of their own 'volition'.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#ServiceEvent"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Book-Physical">
    <rdfs:subClassOf rdf:resource="#InformationBearingObject_Cyc_ContentBearingObject_SUMO"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >An instance of a physical, bound book.- , the physical object, not the informational content.</rdfs:comment>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="TextString">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >OPENCYC 1: MAY 23, 2002
A subcollection of #$CharacterString. Each instance of #$TextString is a #$CharacterString that constitutes a meaningful unit (with respect to some actual language or other #$CommunicationConvention), at or above the level of a word or multi-character symbol (such as might be defined in a formal language or #$ComputerProgram-CW). Thus, `er#q2&amp;apos; is a #$CharacterString but not (as far as I know) a #$TextString, whereas the sentence you are now reading is a #$TextString, as is a paragraph, etc. Note that, as with all #$CharacterStrings, a #$TextString is a sequence of abstract symbols, not a tangible instantiation of it.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#CharacterString"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="TimeInterval">
    <rdfs:subClassOf rdf:resource="#Context"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >TimeInterval_Cyc__TimeInterval_SUMO__time-interval_DOLCE_period_in_time_ISO15926_

In Cyc, TimeInterval is not a measure.
SUMO: An interval of time.  Note that a &amp;%TimeInterval has both an extent and a location on the universal timeline.  Note too that a &amp;%TimeInterval has no gaps, i.e. this class contains only convex time intervals.


OPENCYC 1: MAY 23, 2002
A specialization of #$TemporalThing. Each instance of #$TimeInterval is a temporal thing characterized fully by its temporal attributes. For example, the year A.D. 1967 is an instance of #$TimeInterval; although many interesting things happened during that year, the year itself is completely defined by its temporal extent. On the other hand, the event of Neil Armstrong&amp;apos;s walking on the Moon is an #$Event and not a #$TimeInterval, since it is not fully characterized by its temporal extent or other temporal attributes. Specializations of #$TimeInterval include #$CalendarYear, #$CalendarMonth, and #$FiscalQuarter.

DOLCE: a region - (Space and Time are special kinds of regions, i.e. AttributeValues or measures)  A temporal region, measured according to a calendar.
</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#IntangibleIndividual"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >TimeInterval[Cyc]%TimeInterval[SUMO]%time-interval[DOLCE]period_in_time[ISO15926]</rdfs:label>
    <_LOAD-SEQUENCE rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
    >67</_LOAD-SEQUENCE>
    <rdfs:subClassOf rdf:resource="#TemporalThing"/>
  </_SYN-CLASS>
  <_SYN-CLASS rdf:ID="Pipeline_SUMO">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SUMO &amp;%Pipeline is the class of pipelines used to transport various kinds of fluids.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Pipe"/>
  </_SYN-CLASS>
</rdf:RDF>

<!-- Created with Protege (with OWL Plugin 2.1, Build 284)  http://protege.stanford.edu -->
